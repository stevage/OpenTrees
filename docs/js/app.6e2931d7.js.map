{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?797c","webpack:///./src/components/FeatureInfo.vue?fbee","webpack:///./src/components/Wikipedia.vue?a18c","webpack:///./src/components/Stats.vue?13e4","webpack:///./src/App.vue?0fd8","webpack:///./src/components/Map.vue?6193","webpack:///./src/EventBus.js","webpack:///./src/sources.js","webpack:///src/components/Map.vue","webpack:///./src/components/Map.vue?72dd","webpack:///./src/components/Map.vue","webpack:///./src/components/FeatureInfo.vue?9a5e","webpack:///./src/components/Wikipedia.vue?d7c5","webpack:///src/components/Wikipedia.vue","webpack:///./src/components/Wikipedia.vue?3bb7","webpack:///./src/components/Wikipedia.vue?7f7a","webpack:///src/components/FeatureInfo.vue","webpack:///./src/components/FeatureInfo.vue?6595","webpack:///./src/components/FeatureInfo.vue?49b4","webpack:///./src/components/SourceInfo.vue?f172","webpack:///src/components/SourceInfo.vue","webpack:///./src/components/SourceInfo.vue?0927","webpack:///./src/components/SourceInfo.vue","webpack:///./src/components/About.vue?9b8e","webpack:///src/components/About.vue","webpack:///./src/components/About.vue?e2b9","webpack:///./src/components/About.vue","webpack:///./src/components/Mode.vue?f7d3","webpack:///src/components/Mode.vue","webpack:///./src/components/Mode.vue?c959","webpack:///./src/components/Mode.vue","webpack:///./src/components/Legend.vue?d7e0","webpack:///src/components/Legend.vue","webpack:///./src/components/Legend.vue?c580","webpack:///./src/components/Legend.vue","webpack:///./src/components/Stats.vue?8d85","webpack:///src/components/Stats.vue","webpack:///./src/components/Stats.vue?cbd2","webpack:///./src/components/Stats.vue","webpack:///./src/components/TreeSearch.vue?11c0","webpack:///src/components/TreeSearch.vue","webpack:///./src/components/TreeSearch.vue?8747","webpack:///./src/components/TreeSearch.vue","webpack:///src/App.vue","webpack:///./src/App.vue?5496","webpack:///./src/App.vue?622c","webpack:///./src/main.js","webpack:///./src/components/FeatureInfo.vue?0dc5","webpack:///./src/components/SourceInfo.vue?1722"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","app","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_App_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_1_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Wikipedia_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Wikipedia_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Stats_vue_vue_type_style_index_0_id_34c799f7_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_Stats_vue_vue_type_style_index_0_id_34c799f7_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","Appvue_type_template_id_3992a475_lang_pug_render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","id","src","_v","_s","stats","openTrees","toLocaleString","sources","countries","directives","rawName","expression","staticStyle","position","right","top","cursor","on","click","close","panel","_e","showStats","href","about","staticRenderFns","Mapvue_type_template_id_6c223054_scoped_true_lang_pug_render","Mapvue_type_template_id_6c223054_scoped_true_lang_pug_staticRenderFns","EventBus","Vue","console","log","sourceStats","map","source","objectSpread","crosswalk","src_sources","Mapvue_type_script_lang_js_flatten","pairs","reduce","arr","_ref","_ref2","slicedToArray","a","b","concat","toConsumableArray","hues","colors","h","lab","formatHex","Mapvue_type_script_lang_js_","undefined","mounted","_mounted","asyncToGenerator","regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","next","location","hostname","hash","match","mapbox_gl_default","clearStorage","accessToken","Map","container","center","zoom","style","version","layers","glyphs","origin","bearingSnap","minPitch","maxPitch","touchZoomRotate","disableRotation","addControl","NavigationControl","dist_default","init","U","loadImage","onLoad","addGeoJSON","type","features","filter","centre","bounds","primary","properties","topTree","speciesCounts","geometry","coordinates","addVector","addCircle","circleColor","circleStrokeColor","circleStrokeWidth","circleRadius","stops","sourceLayer","circleOpacity","_arr","_i","submode","Mapvue_type_script_lang_js_stops","visGroups","rarity","reverse","_ref3","_ref4","color","number","circleSortKey","addSymbol","textField","minzoom","textMaxWidth","textSize","textJustify","textRadialOffset","textColor","textVariableAnchor","iconImage","iconSize","iconAllowOverlap","maxzoom","visibility","clickLayer","_ref5","$emit","flyTo","sourceLabelProps","textLineHeight","textHaloColor","textHaloWidth","textFont","textAllowOverlap","switchMode","getZoom","hoverPointer","visLayers","clickOneLayer","e","f","setData","setFilter","scientific","$on","$nextTick","resize","updateLocal","stop","arguments","watch","methods","hide","show","indexOf","setCircleOpacity","setCircleRadius","setCircleColor","localTrees","queryRenderedFeatures","counts","percent","x","Math","round","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","done","tree","_ref6","_ref7","count","common","err","return","topVals","keys_default","sort","local","visType","_ref8","_ref9","none","species1","species2","family","health","maturity","harm","edible","trunk","label","k","components_Mapvue_type_script_lang_js_","component","componentNormalizer","options","__file","FeatureInfovue_type_template_id_59bba388_scoped_true_lang_pug_render","description","class","subclass","genus","species","variety","Number","isFinite","dbh","height","structure","planted","species_count","_l","prop","ignoreProps","clickSource","sourceName","updated","license","target","feature","searchTerm","FeatureInfovue_type_template_id_59bba388_scoped_true_lang_pug_staticRenderFns","Wikipediavue_type_template_id_473abb5d_lang_pug_render","imageUrl","domProps","innerHTML","text","wikiLink","wikiSearchLink","Wikipediavue_type_template_id_473abb5d_lang_pug_staticRenderFns","corsAnywhere","wikiapi","textapi","imageapi","Wikipediavue_type_script_lang_js_","title","loading","props","created","Wikipedia","doSearch","computed","encodeURIComponent","axios_default","then","response","pages","query","page","thumbnail","thumb","replace","devicePixelRatio","extract","components_Wikipediavue_type_script_lang_js_","Wikipedia_component","FeatureInfovue_type_script_lang_js_","components","image_url","find","showExtra","_this2","long","short","_this3","FeatureInfo","newValue","oldValue","components_FeatureInfovue_type_script_lang_js_","FeatureInfo_component","SourceInfovue_type_template_id_b733c1de_scoped_true_lang_pug_render","country","info","licenseUrl","download","ref","keepCount","_m","hasField","delCount","noGeomCount","SourceInfovue_type_template_id_b733c1de_scoped_true_lang_pug_staticRenderFns","colspan","SourceInfovue_type_script_lang_js_","SourceInfo","sourceId","fieldName","toLowerCase","components_SourceInfovue_type_script_lang_js_","SourceInfo_component","Aboutvue_type_template_id_7107d340_scoped_true_lang_pug_render","Aboutvue_type_template_id_7107d340_scoped_true_lang_pug_staticRenderFns","Aboutvue_type_script_lang_js_","About","components_Aboutvue_type_script_lang_js_","About_component","Modevue_type_template_id_0fc45b12_scoped_true_lang_pug_render","$event","open","selectedModeCaption","not-mobile","caption","submodeName","checked","_q","selectedMode","change","for","subcaption","selectedSubmode","Modevue_type_template_id_0fc45b12_scoped_true_lang_pug_staticRenderFns","Modevue_type_script_lang_js_","modes","submodes","Mode","activeSubmodes","selectedModeAndSubmode","components_Modevue_type_script_lang_js_","Mode_component","Legendvue_type_template_id_5ef2c852_scoped_true_lang_pug_render","zoomWarning","vals","background","Legendvue_type_template_id_5ef2c852_scoped_true_lang_pug_staticRenderFns","Legendvue_type_script_lang_js_","minZooms","Legend","components_Legendvue_type_script_lang_js_","Legend_component","Statsvue_type_template_id_34c799f7_scoped_true_lang_pug_render","text-align","fields","differentSpecies","fieldFunc","Statsvue_type_template_id_34c799f7_scoped_true_lang_pug_staticRenderFns","Statsvue_type_script_lang_js_","Stats","set_default","components_Statsvue_type_script_lang_js_","Stats_component","TreeSearchvue_type_template_id_45637ae1_scoped_true_lang_pug_render","input","composing","TreeSearchvue_type_template_id_45637ae1_scoped_true_lang_pug_staticRenderFns","TreeSearchvue_type_script_lang_js_","TreeSearch","components_TreeSearchvue_type_script_lang_js_","TreeSearch_component","Appvue_type_script_lang_js_","App","_","src_Appvue_type_script_lang_js_","App_component","config","productionTip","render","$mount","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_0_id_59bba388_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_FeatureInfo_vue_vue_type_style_index_0_id_59bba388_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SourceInfo_vue_vue_type_style_index_0_id_b733c1de_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_5_oneOf_1_0_node_modules_css_loader_index_js_ref_5_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_5_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_SourceInfo_vue_vue_type_style_index_0_id_b733c1de_scoped_true_lang_css___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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CA,CACA,KACA,gBACA,CACA,UACA,CACA,UACA,eACA,SACA,aACA,UACA,YACA,mBAKA,CACA,WACA,kBACA,CACA,KACA,gBACA,CACA,UACA,CACA,QACA,YACA,YACA,kBACA,aACA,cACA,QACA,iBACA,YACA,SACA,QACA,QACA,eACA,gBACA,iBACA,UACA,YACA,QACA,qBAKA,CACA,gCACA,mBACA,CACA,KACA,gBACA,CACA,UACA,mDAIA,CACA,eACA,gBACA,qDAEA,CACA,QACA,gBACA,iDAEA,CACA,gBACA,oBACA,CACA,MACA,CACA,KACA,gBACA,CACA,UACA,CACA,SACA,cACA,YACA,UACA,cACA,QACA,WACA,aACA,OACA,UACA,WACA,SACA,UACA,YACA,cACA,SACA,aACA,UACA,YACA,eACA,WACA,YACA,UACA,YACA,eACA,QACA,aACA,WACA,QACA,YACA,SACA,QACA,SACA,WACA,QACA,aACA,WACA,UACA,WACA,QACA,SACA,eACA,OACA,WACA,WACA,aAIA,CACA,KACA,kBACA,CACA,UACA,kDAGA,CACA,KACA,qBACA,CACA,UACA,CACA,kBACA,0BACA,oBACA,sBACA,0BAOAC,SAAA,CACA,CACA,MACA,kBACA,CACA,KACA,gBACA,CACA,UACA,uDAIA,CACA,QACA,kBACA,6CAEA,CACA,MACA,kBACA,gDAEA,CACA,QACA,iBACA,iDAEA,CACA,SACA,mBACA,kDAEA,CACA,SACA,mBACA,8CAEA,CACA,MACA,mBACA,iDAEA,CACA,UACA,mBACA,CACA,KACA,gBACA,CACA,UACA,CACA,QACA,YACA,YACA,kBACA,aACA,cACA,QACA,iBACA,YACA,SACA,QACA,QACA,eACA,gBACA,iBACA,UACA,YACA,QACA,qBAKA,CACA,QACA,oBACA,CACA,KACA,gBACA,CACA,UACA,CACA,UACA,eACA,SACA,aACA,UACA,YACA,mBAKA,CACA,WACA,mBACA,iDAEA,CACA,MACA,iBACA,8CAEA,CACA,QACA,mBACA,+CAIA,CACA,qBACA,mBACA,CACA,KACA,gBACA,CACA,UACA,CACA,SACA,eACA,UACA,gBACA,qBAKA,gEAGAC,OAAA,CACA,CACA,UACA,uBACA,4CAEA,aAAA7J,EAAA,wCACA,YAAAA,EAAA,uCACA,YAAAA,EAAA,uCACA,CACA,gBACAA,EAAA,GACA,yCAEA,YAAAA,EAAA,uCACA,cAAAA,EAAA,yCACA,YAAAA,EAAA,uCACA,YAAAA,EAAA,uCACA,aAAAA,EAAA,wCACA,CACA,iBACAA,EAAA,GACA,0CAEA,gBAAAA,EAAA,4CACA,YAAAA,EAAA,wCACA,aAAAA,EAAA,yCACA,CACA,gBACAA,EAAA,IACA,yCAEA,aAAAA,EAAA,yCACA,cAAAA,EAAA,0CACA,eAAAA,EAAA,2CACA,cAAAA,EAAA,0CACA,gBAAAA,EAAA,4CACA,CACA,gBACAA,EAAA,IACA,0CAIAuE,OAAA,CAEA,+CACA,8CACA,yCACA,yCACA,sCACA,wCACA,sCAEAuF,OAAA,CACA,CACA,YACA,2BACA,CACA,YACA,YACA,YACA,KACA,KACA,MACA,YACA,YACA,SAGA,CACA,OACA,0BACA,8DAEA,CACA,OACA,0BACA,CACA,OACA,OACA,gBACA,KACA,KACA,KACA,QACA,SAGA,CACA,OACA,wBACA,CACA,OACA,OACA,aACA,YACA,KACA,KACA,KACA,SAGA,CACA,YACA,wBACA,CACA,YACA,QACA,QACA,aACA,KACA,KACA,KACA,WACA,cAGA,CACA,OACA,0BACA,CACA,OACA,OACA,QACA,QACA,IACA,KACA,SACA,SAGA,CACA,MACA,qBACA,mDAEA,6CAEAC,SAAA,CAEA,CACA,cACA,wBACA,CACA,cACA,cACA,cACA,iBACA,YACA,aACA,UACA,IACA,qBACA,YACA,QACA,YAGA,CACA,SACA,2BACA,CACA,SACA,IACA,eACA,SACA,SACA,eACA,cAGA,CACA,cACA,2BACA,CACA,cACA,cACA,cACA,eACA,KACA,eACA,cACA,YAIA,CACA,QACA,yBACA,CACA,QACA,WACA,IACA,cACA,QACA,QACA,WACA,SAGA,CACA,MACA,0BACA,w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","file":"js/app.6e2931d7.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=1&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=style&index=0&id=34c799f7&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=style&index=0&id=34c799f7&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"flex flex-column vh-100 avenir\",attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"bb b--gray bg-green haoeu3-ns\",attrs:{\"id\":\"top\"}},[_c('h1',{staticClass:\"f1-ns f5 ma2-ns lancelot dib fl\"},[_c('img',{staticClass:\"w2-ns w1 dib fl ma2\",attrs:{\"src\":\"cubetree-logo.png\"}}),_c('span',{staticClass:\"dark-green\"},[_vm._v(\"OpenTrees.org\")]),_c('span',{staticClass:\"dark-gray ml2 ml4-ns f3-ns\"},[_vm._v(_vm._s(_vm.stats.openTrees.toLocaleString())+\" open data trees from \"+_vm._s(_vm.stats.sources)+\" sources in \"+_vm._s(_vm.stats.countries.length)+\" countries.\")])])]),_c('div',{staticClass:\"flex flex-auto\",attrs:{\"id\":\"middle\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.panel),expression:\"panel\"}],staticClass:\"br b--gray overflow-y-scroll overflow-x-hidden relative\",attrs:{\"id\":\"sidebar\"}},[_c('i',{staticClass:\"close-btn pa2 mt1 dark-green pointer fw6 fas fa-times z-5\",staticStyle:{\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\",\"cursor\":\"pointer\"},on:{\"click\":_vm.close}}),_c('div',{staticClass:\"panel\"},[_c('FeatureInfo',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.panel==='FeatureInfo'),expression:\"panel==='FeatureInfo'\"}]}),_c('SourceInfo',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.panel==='SourceInfo'),expression:\"panel==='SourceInfo'\"}]}),(_vm.panel==='About')?_c('About'):_vm._e()],1)]),_c('div',{staticClass:\"relative flex-auto\",attrs:{\"id\":\"map-container\"}},[_c('Map'),(!_vm.showStats)?_c('div',{staticClass:\"absolute ba b--gray shadow-3 ml2-ns mt2-ns mw5 mw-none-ns overflow-y-scroll\",attrs:{\"id\":\"overlay\"}},[_c('Mode'),_c('Legend')],1):_vm._e(),(_vm.showStats)?_c('div',{staticClass:\"absolute w-100 h-100 pa2 center\"},[_c('Stats')],1):_vm._e()],1)]),_c('div',{staticClass:\"bt b--light-gray flex-none pa1 shadow-3\",attrs:{\"id\":\"bottom\"}},[_vm._v(\"Created by \"),_c('a',{attrs:{\"href\":\"https://twitter.com/stevage1/\"}},[_vm._v(\"Steve Bennett\")]),_vm._v(\". \"),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":_vm.about}},[_vm._v(\"About OpenTrees.org\")]),_vm._v(\".\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"absolute absolute--fill\",attrs:{\"id\":\"map\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import Vue from 'vue';\nexport const EventBus = new Vue();","import sources from './sources-out.json';\n// sourceStats are generated automatically, but we want to combine them here\nimport sourceStats from './source-stats.json';\nconsole.log({sources});\nconsole.log({sourceStats});\nexport default sources.map(source => ({\n    ...{ ... source, crosswalk: source.crosswalk || {} },\n    ...(sourceStats[source.id])\n}));\n","<template lang=\"pug\">\n#map.absolute.absolute--fill\n</template>\n\n<script>\nimport mapboxgl from 'mapbox-gl';\nimport U from 'mapbox-gl-utils';\nimport { EventBus } from '../EventBus';\nimport sources from '../sources';\nconsole.log(sources);\n\nconst flatten = (pairs) => pairs.reduce((arr, [a, b]) => [...arr, a, b], []);\nimport * as d3Color from 'd3-color';\nconst hues = [0, 30, 60, 90, 150, 180, 210, 250, 280, 320];\nconst colors = [\n    ...hues.map((h) => d3Color.hcl(h, 100, 60).formatHex()),\n    ...hues.map((h) => d3Color.hcl(h, 40, 40).formatHex()),\n];\n\nexport default {\n    data: () => ({\n        mode: undefined,\n    }),\n    async mounted() {\n        if (\n            window.location.hostname === 'localhost' ||\n            window.location.hash.match(/clear/)\n        ) {\n            mapboxgl.clearStorage();\n        }\n        mapboxgl.accessToken =\n            'pk.eyJ1Ijoic3RldmFnZSIsImEiOiJjazZzd3V2dXEwNGZlM2xtZzFnOXdkOTFtIn0.pKVxwqE61gNc7PKK5u1j6g';\n        const map = new mapboxgl.Map({\n            container: 'map',\n            center: [144.96, -37.81],\n            zoom: 1,\n\n            style: !window.location.hash.match(/nomap/)\n                ? 'mapbox://styles/stevage/ck6sws4g704uu1iqtvn25gj6v/draft?v=1'\n                : {\n                      version: 8,\n                      sources: {},\n                      layers: [],\n                      glyphs: `${\n                          window.location.origin\n                      }/font-glyphs/{fontstack}/{range}.pbf`,\n                  },\n            // style: 'mapbox://stevage/cjxeaxkqi0i2v1cqq1qrnws8c', // satellite\n            hash: 'pos',\n            bearingSnap: 360,\n            // dragRotate: false,\n            minPitch: 0,\n            maxPitch: 0,\n        });\n        map.touchZoomRotate.disableRotation();\n        map.addControl(new mapboxgl.NavigationControl());\n        U.init(map, mapboxgl);\n        window.map = map;\n        window.app.Map = this;\n        this.map = map;\n        map.U.loadImage('tree', 'cubetree-favicon.png');\n        map.U.onLoad(() => {\n            console.log('this one', sources[0]);\n            map.U.addGeoJSON('sources', {\n                type: 'FeatureCollection',\n                features: sources\n                    .filter(\n                        (source) =>\n                            (source.centre || source.bounds) && !source.primary\n                    )\n                    .map((source) => ({\n                        type: 'Feature',\n                        properties: {\n                            ...source,\n                            topTree:\n                                source.speciesCounts &&\n                                source.speciesCounts.length\n                                    ? source.speciesCounts[0][0]\n                                    : '',\n                        },\n                        geometry: {\n                            type: 'Point',\n                            coordinates: source.centre || [\n                                (source.bounds[0] + source.bounds[2]) / 2,\n                                (source.bounds[1] + source.bounds[3]) / 2,\n                            ],\n                        },\n                    })),\n            });\n\n            map.U.addVector(\n                'trees',\n                window.location.hostname === 'localhostaoeu'\n                    ? 'http://localhost:4011/index.json'\n                    : 'mapbox://stevage.9slh6b3l'\n            );\n            map.U.addGeoJSON('selected-tree');\n            map.U.addCircle('trees-selected', 'selected-tree', {\n                circleColor: 'transparent',\n                // circleStrokeColor: ['case', ['to-boolean', ['feature-state', 'selected']], 'red', 'transparent'],\n                circleStrokeColor: 'hsla(100,60%,40%,0.8)',\n                circleStrokeWidth: 3,\n                circleRadius: { stops: [[10, 8], [12, 16]] },\n            });\n            map.U.addCircle('trees-similar', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'transparent',\n                circleStrokeWidth: 1,\n                circleStrokeColor: 'hsla(100,50%,60%,0.8)',\n                circleRadius: { stops: [[12, 6], [17, 10]] },\n                filter: false,\n            });\n            map.U.addCircle('trees-vis-none', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(80,50%,60%,0.6)',\n                circleRadius: { stops: [[10, 4], [12, 6], [16, 8], [20, 18]] },\n                circleOpacity: 0.5,\n            });\n            for (const submode of ['1', '2']) {\n                map.U.addCircle(`trees-vis-species${submode}`, 'trees', {\n                    sourceLayer: 'trees',\n                    circleColor: [\n                        'case',\n                        ...stops(`species${submode}`),\n                        'hsla(0,0%,0%,0.3)',\n                    ],\n                    circleRadius: {\n                        stops: [[10, 1], [12, 2], [17, 6], [20, 18]],\n                    },\n                    circleOpacity: [\n                        'interpolate',\n                        ['linear'],\n                        ['zoom'],\n                        13,\n                        0.5,\n                        17,\n                        1,\n                    ],\n                });\n            }\n            map.U.addCircle('trees-vis-family', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: ['case', ...stops('family'), 'hsla(0,0%,0%,0.3)'],\n                circleRadius: { stops: [[12, 2], [17, 6]] },\n                circleOpacity: [\n                    'interpolate',\n                    ['linear'],\n                    ['zoom'],\n                    13,\n                    0.5,\n                    17,\n                    1,\n                ],\n            });\n\n            map.U.addCircle('trees-vis-rarity', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[12, 2], [17, 6], [20, 18]] },\n                // circleColor: ['case', ...flatten(visGroups.rarity.map(([name, color, filter]) => [filter, color])), '#ddd'],\n                circleColor: [\n                    'interpolate',\n                    ['linear'],\n                    ['to-number', ['get', 'species_count']],\n                    ...flatten(\n                        visGroups.rarity\n                            .reverse()\n                            .map(([name, color, number]) => [number, color])\n                    ),\n                ],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1],\n                circleSortKey: ['-', ['get', 'species_count']],\n            });\n            map.U.addCircle('trees-vis-health', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[10, 1], [12, 2], [17, 6], [20, 18]] },\n                circleColor: [\n                    'match',\n                    ['coalesce', ['get', 'health'], ''],\n                    ...stops('health'),\n                    'hsla(260,80%,50%,0.7)',\n                ],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-maturity', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[10, 1], [12, 2], [17, 6], [20, 18]] },\n                circleColor: [\n                    'match',\n                    ['coalesce', ['get', 'maturity'], ''],\n                    ...stops('maturity'),\n                    'hsla(260,80%,50%,0.7)',\n                ],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-edible', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[10, 1], [12, 2], [17, 6], [20, 18]] },\n                circleColor: [\n                    'case',\n                    ...stops('edible'),\n                    'transparent' /*'hsla(100,80%,20%,0.02)'*/,\n                ],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-harm', 'trees', {\n                sourceLayer: 'trees',\n                circleRadius: { stops: [[12, 2], [17, 6], [20, 18]] },\n                circleColor: ['case', ...stops('harm'), 'transparent'],\n                // circleOpacity:['interpolate', ['linear'], ['zoom'], 13, 0.5, 17, 1]\n            });\n            map.U.addCircle('trees-vis-local', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(80,50%,70%,0.9)',\n                circleRadius: { stops: [[10, 2], [12, 3], [16, 5], [20, 14]] },\n                circleOpacity: 0.9,\n            });\n            map.U.addCircle('trees-vis-trunk', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(40,90%,20%,0.8)',\n                circleRadius: [\n                    'interpolate',\n                    ['exponential', 1],\n                    ['to-number', ['get', 'dbh'], 0],\n                    0,\n                    0,\n                    1,\n                    1,\n                    50,\n                    10,\n                    250,\n                    20,\n                ],\n                circleOpacity: 0.5,\n            });\n            map.U.addCircle('trees-inner', 'trees', {\n                sourceLayer: 'trees',\n                circleColor: 'hsla(80,50%,20%,0.9)',\n                circleRadius: { stops: [[9, 0.5], [11, 1], [14, 2]] },\n            });\n            map.U.addSymbol('trees-vis-label', 'trees', {\n                sourceLayer: 'trees',\n                textField: [\n                    'coalesce',\n                    ['get', 'common'],\n                    ['get', 'scientific'],\n                    '',\n                ],\n                minzoom: 16,\n                textMaxWidth: 3,\n                textSize: [\n                    'interpolate',\n                    ['exponential', 1.5],\n                    ['zoom'],\n                    15,\n                    8,\n                    19,\n                    10,\n                ],\n                textJustify: 'auto',\n                textRadialOffset: 0.2,\n                textColor: 'hsl(110,50%,15%)',\n                textVariableAnchor: [\n                    'left',\n                    'right',\n                    'bottom-left',\n                    'top-left',\n                    'top-right',\n                    'bottom-right',\n                    'bottom',\n                    'top',\n                ],\n            });\n\n            map.U.addSymbol('sources-icons', 'sources', {\n                iconImage: 'tree',\n                iconSize: ['interpolate', ['linear'], ['zoom'], 1, 0.1, 5, 0.3],\n                iconAllowOverlap: true,\n                // circleColor:'hsl(100,30%,30%)',\n                // circleRadius:['interpolate', ['linear'], ['zoom'], 3, 5, 5, 10],\n                // circleStrokeWidth:3,\n                // circleStrokeColor:'hsl(100,30%,50%)',\n                // circleOpacity: ['interpolate',['linear'],['zoom'],5,1,7,0],\n                maxzoom: 10,\n                visibility: window.location.hash.match('noicons')\n                    ? 'none'\n                    : 'visible',\n            });\n            // map.U.addCircle('sources-circles', 'sources', {e\n            //     circleColor:'hsl(100,30%,30%)',\n            //     circleRadius:['interpolate', ['linear'], ['zoom'], 3, 5, 5, 10],\n            //     circleStrokeWidth:3,\n            //     circleStrokeColor:'hsl(100,30%,50%)',\n            //     circleOpacity: ['interpolate',['linear'],['zoom'],5,1,7,0],\n            //     maxzoom: 8\n            // });\n            map.U.clickLayer('sources-icons', ({ features }) => {\n                EventBus.$emit('source-select', features[0].properties.id);\n                console.log(features[0].geometry);\n                map.flyTo({\n                    center: features[0].geometry.coordinates,\n                    zoom: 11,\n                });\n            });\n            const sourceLabelProps = {\n                textField: ['coalesce', ['get', 'short'], ['get', 'id']],\n                // textField: ['coalesce', ['get','topTree'],''],\n                textMaxWidth: 5,\n                textLineHeight: 1,\n\n                textHaloColor: 'hsla(100,30%,95%,0.9)',\n                textColor: 'hsl(100,30%,10%)',\n                textHaloWidth: 2,\n                textFont: ['Lancelot Regular', 'Arial Unicode MS Regular'],\n                visibility: window.location.hash.match('noicons')\n                    ? 'none'\n                    : 'visible',\n            };\n\n            map.U.addSymbol('sources-labels', 'sources', {\n                ...sourceLabelProps,\n                textAllowOverlap: true,\n                maxzoom: 10,\n                minzoom: 8,\n            });\n\n            map.U.addSymbol('sources-labels-low', 'sources', {\n                ...sourceLabelProps,\n                textVariableAnchor: [\n                    'center',\n                    'bottom',\n                    'left',\n                    'bottom-left',\n                    'top-left',\n                    'right',\n                    'top-right',\n                    'bottom-right',\n                ],\n                textRadialOffset: 1,\n                textAllowOverlap: false,\n                maxzoom: 8,\n                minzoom: 4,\n            });\n\n            this.switchMode('none');\n            map.on('zoom', () => EventBus.$emit('zoom-change', map.getZoom()));\n        });\n\n        map.U.hoverPointer(['trees-inner', ...visLayers]);\n        // let selectedId;\n        map.U.clickOneLayer(\n            ['trees-inner', ...visLayers],\n            (e) => {\n                if (map.getZoom() < 7) {\n                    return;\n                }\n                console.log(e);\n                // if (selectedId) {\n                //     map.setFeatureState({ source: 'trees', sourceLayer: 'trees', id: selectedId }, { selected: false });\n                // }\n                const f = e.features[0];\n                EventBus.$emit('tree-select', f);\n                map.U.setData('selected-tree', f);\n                map.U.setFilter(\n                    'trees-similar',\n                    f.properties.scientific\n                        ? ['==', ['get', 'scientific'], f.properties.scientific]\n                        : false\n                );\n                // selectedId = e.features[0].id;\n                // map.setFeatureState({ source: 'trees', sourceLayer: 'trees', id: selectedId }, { selected: true });\n            },\n            () => {\n                map.U.setData('selected-tree', {\n                    type: 'FeatureCollection',\n                    features: [],\n                });\n                map.U.setFilter('trees-similar', false);\n                EventBus.$emit('unselect-tree');\n            }\n        );\n        EventBus.$on('vis-mode', (mode) =>\n            this.$nextTick(() => (this.mode = mode))\n        );\n        EventBus.$on('resize', () => this.$nextTick(() => this.map.resize()));\n        EventBus.$on('species-filter', (filter) =>\n            map.U.setFilter(\n                [...visLayers, 'trees-inner'],\n                [\n                    'any',\n                    ['in', filter, ['get', 'scientific']],\n                    ['in', filter, ['get', 'genus']],\n                ]\n            )\n        );\n        map.on('moveend', () => {\n            if (this.mode === 'local') {\n                this.updateLocal();\n            }\n        });\n    },\n    watch: {\n        mode() {\n            this.switchMode(this.mode);\n        },\n    },\n    methods: {\n        switchMode(mode) {\n            this.map.U.hide(visLayers);\n            this.map.U.show(`trees-vis-${mode}`);\n            console.log(mode);\n            if (['none', 'label'].indexOf(mode) >= 0) {\n                this.map.U.setCircleOpacity('trees-inner', 1);\n                this.map.U.setCircleRadius('trees-inner', {\n                    stops: [[9, 1], [14, 2]],\n                });\n            } else {\n                this.map.U.setCircleOpacity('trees-inner', {\n                    stops: [[14, 0], [15, 1]],\n                });\n                this.map.U.setCircleRadius('trees-inner', {\n                    stops: [[9, 0.5], [11, 1], [14, 2]],\n                });\n            }\n            if (mode === 'label') {\n                this.map.U.show('trees-vis-none');\n            }\n\n            if (mode === 'local') {\n                this.updateLocal();\n                return; // it also does the legend update\n            }\n            EventBus.$emit('update-legend', visGroups[mode]);\n        },\n        updateLocal() {\n            // const colors = ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'];\n            // const hues = [0, 30, 60, 90, 150, 180, 210, 250, 280, 320]\n            // const colors = [...hues.map(h => d3Color.hcl(h,100,60).formatHsl()), ...hues.map(h => d3Color.hcl(h,40,40).formatHsl())];\n            if (this.map.getZoom() < 12) {\n                this.map.U.setCircleColor('trees-vis-local', 'green');\n                return;\n            }\n\n            const localTrees = this.map.queryRenderedFeatures({\n                layers: ['trees-inner'],\n            });\n            const counts = {};\n            const percent = (x) => Math.round(x * 100) / 1 + '%';\n            for (const tree of localTrees) {\n                if (tree.properties.scientific) {\n                    let [count, common] = counts[\n                        tree.properties.scientific\n                    ] || [0, ''];\n                    counts[tree.properties.scientific] = [\n                        count + 1,\n                        common || tree.properties.common,\n                    ];\n                }\n            }\n            console.log(counts);\n            const topVals = Object.keys(counts)\n                .sort((a, b) => counts[b][0] - counts[a][0])\n                .slice(0, colors.length);\n            visGroups.local = topVals.map((scientific, i) => [\n                `${percent(\n                    counts[scientific][0] / localTrees.length\n                )}: ${scientific}${\n                    counts[scientific][1]\n                        ? `<br/> <span class=\"f7\">${counts[scientific][1]}</>`\n                        : ''\n                }`,\n                colors[i],\n                ['==', ['get', 'scientific'], scientific],\n            ]);\n            console.log(visGroups.local);\n            this.map.U.setCircleColor(\n                'trees-vis-local',\n                visGroups.local.length\n                    ? ['case', ...stops('local'), 'transparent']\n                    : 'transparent'\n            );\n            EventBus.$emit('update-legend', [\n                ...visGroups.local,\n                ['Other', 'transparent'],\n            ]);\n        },\n    },\n};\nconst stops = (visType) =>\n    flatten(visGroups[visType].map(([name, color, stop]) => [stop, color]));\nconst COMMONSCALE = 10;\nconst visGroups = {\n    none: [],\n    species1: [\n        [\n            'Eucalyptus',\n            'hsl(90,90%,30%)',\n            ['in', ['get', 'genus'], ['literal', ['Eucalyptus']]],\n        ],\n        [\n            'Corymbia,  Angophora',\n            'hsl(90,30%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Corymbia', 'Angophora']]],\n        ],\n        [\n            'Lophostemon',\n            'hsl(90,90%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Lophostemon']]],\n        ],\n        [\n            'Grevilleas, proteas, banksias',\n            'hsl(120,60%,50%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    ['Grevillea', 'Grevillia', 'Banksia', 'Stenocarpus'],\n                ],\n            ],\n        ],\n        [\n            'Melaleucas and callistemons',\n            'hsl(200, 60%,50%)',\n            ['in', ['get', 'genus'], ['literal', ['Melaleuca', 'Callistemon']]],\n        ],\n        [\n            '(Allo)Casuarinas',\n            'hsl(180, 90%,60%)',\n            [\n                'in',\n                ['get', 'genus'],\n                ['literal', ['Casuarina', 'Allocasuarina']],\n            ],\n        ],\n        [\n            'Other natives',\n            'hsl(160, 90%, 30%)',\n            [\n                'any',\n                [\n                    'in',\n                    ['get', 'genus'],\n                    [\n                        'literal',\n                        [\n                            'Hakea',\n                            'Agonis',\n                            'Tristaniopsis',\n                            'Lagunaria',\n                            'Acacia',\n                            'Hymenosporum',\n                            'Brachychiton',\n                            'Leptospermum' /* some aren't endemic */,\n                            'Waterhousea' /* a bit uncertain */,\n                            'Bursaria',\n                            'Geijera',\n                            'Paraserianthes',\n                            'Myoporum',\n                            'Exocarpos',\n                            'Exocarpus',\n                            'Jacksonia',\n                            'Agathis' /* well only Robusta, atropurpurea, microstachya */,\n                        ],\n                    ],\n                ],\n                [\n                    'all',\n                    [\n                        'in',\n                        ['get', 'genus'],\n                        ['literal', ['Acmena', 'Syzygium']],\n                    ],\n                    ['in', ['get', 'species'], ['literal', ['smithii']]],\n                ],\n                [\n                    'in',\n                    ['get', 'scientific'],\n                    [\n                        'literal',\n                        [\n                            'Pittosporum undulatum',\n                            'Cupaniopsis anacardioides',\n                            'Acmena smithii',\n                            'Acmena smithii (Syzygium smithii)',\n                            'Melia azedarach',\n                            'Syzygium australe',\n                        ],\n                    ],\n                ],\n            ],\n        ],\n        [\n            'Planes',\n            'hsl(0,86%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Platanus', 'Plantanus']]],\n        ],\n        [\n            'Elms',\n            'hsl(30,60%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Ulmus', 'Celtis']]],\n        ],\n        [\n            'Oaks & maples',\n            'hsl(345, 60%,30%)',\n            ['in', ['get', 'genus'], ['literal', ['Quercus', 'Acer']]],\n        ],\n        [\n            'Palms',\n            'hsl(40, 100%,70%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    [\n                        'Phoenix',\n                        'Washingtonia',\n                        'Jubaea',\n                        'Chamaerops',\n                        'Syagrus',\n                        'Livistona',\n                        'Trachycarpus',\n                    ],\n                ],\n            ],\n        ],\n        [\n            'Conifers',\n            'hsl(60,90%,45%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    [\n                        'Pinus',\n                        'Araucaria',\n                        'Cupressus',\n                        'Cupressocyparis',\n                        'Podocarpus',\n                        'Platycladus',\n                        'Thuja',\n                        'Hesperocyparis',\n                        'Callitris',\n                        'Cedrus',\n                        'Picea' /* spruce */,\n                        'Abies',\n                        'Cunninghamia',\n                        'Chamaecyparis',\n                        'Sequoiadendron',\n                        'Sequoia',\n                        'Thujopsis',\n                        'Taxus',\n                        'Lepidopthamnus',\n                    ],\n                ],\n            ],\n        ],\n        [\n            'Pears, plums and other fruits',\n            'hsl(250,60%,60%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    ['Pyrus', 'Prunus', 'Malus', 'Citrus', 'Mangifera'],\n                ],\n            ],\n        ],\n        [\n            'Figs, olives',\n            'hsl(0,0%,40%)',\n            ['in', ['get', 'genus'], ['literal', ['Ficus', 'Olea']]],\n        ],\n        [\n            'Ashes',\n            'hsl(0,0%,20%)',\n            ['in', ['get', 'genus'], ['literal', ['Fraxinus']]],\n        ],\n        [\n            'Other exotics',\n            'hsl(310, 90%,60%)',\n            [\n                'any',\n                [\n                    'in',\n                    ['get', 'genus'],\n                    [\n                        'literal',\n                        [\n                            'Betula',\n                            'Liquidambar',\n                            'Gleditsia',\n                            'Robinia',\n                            'Pseudotsuga',\n                            'Alnus',\n                            'Laburnum',\n                            'Eriobotrya',\n                            'Olea',\n                            'Schinus',\n                            'Photinia',\n                            'Laurus',\n                            'Populus',\n                            'Ligustrum',\n                            'Cotoneaster',\n                            'Nerium',\n                            'Pyracantha',\n                            'Zelkova',\n                            'Jacaranda',\n                            'Metrosideros',\n                            'Pistacia',\n                            'Pistachia',\n                            'Arbutus',\n                            'Crataegus',\n                            'Koelreuteria',\n                            'Morus',\n                            'Cinnamomum' /* a small number of natives */,\n                            'Virgilia',\n                            'Salix',\n                            'Ceratonia',\n                            'Cercis',\n                            'Tilia',\n                            'Ginkgo',\n                            'Magnolia',\n                            'Melia',\n                            'Afrocarpus',\n                            'Michelia',\n                            'Sophora' /* maybe */,\n                            'Carpinus',\n                            'Fagus',\n                            'Sorbus',\n                            'Liriodendron',\n                            'Ilex',\n                            'Aesculus',\n                            'Viburnum',\n                            'Genista',\n                        ],\n                    ],\n                ],\n                [\n                    'in',\n                    ['get', 'species'],\n                    [\n                        'literal',\n                        ['indica', 'eugenioides', 'japonicus', 'japonica'],\n                    ],\n                ],\n                [\n                    'in',\n                    ['get', 'scientific'],\n                    [\n                        'literal',\n                        [\n                            'Agathis robusta',\n                            'Pittosporum tenuifolium',\n                            'Agathis australis',\n                            'Cordyline australis',\n                            'Hibiscus syriacus',\n                        ],\n                    ],\n                ],\n            ],\n        ],\n    ],\n    species2: [\n        [\n            'Gum',\n            'hsl(90,90%,30%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    ['Eucalyptus', 'Corymbia', 'Angophora', 'Lophostemon'],\n                ],\n            ],\n        ],\n        [\n            'Maple',\n            'hsl(40,90%,30%)',\n            ['in', ['get', 'genus'], ['literal', ['Acer']]],\n        ],\n        [\n            'Oak',\n            'hsl(60,70%,40%)',\n            ['in', ['get', 'genus'], ['literal', ['Quercus']]],\n        ],\n        [\n            'Plane',\n            'hsl(0,90%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Platanus']]],\n        ],\n        [\n            'Locust',\n            'hsl(30,100%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Gleditsia']]],\n        ],\n        [\n            'Linden',\n            'hsl(120,80%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Tilia']]],\n        ],\n        [\n            'Ash',\n            'hsl(140,70%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Fraxinus']]],\n        ],\n        [\n            'Conifer',\n            'hsl(210,70%,60%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    [\n                        'Pinus',\n                        'Araucaria',\n                        'Cupressus',\n                        'Cupressocyparis',\n                        'Podocarpus',\n                        'Platycladus',\n                        'Thuja',\n                        'Hesperocyparis',\n                        'Callitris',\n                        'Cedrus',\n                        'Picea',\n                        'Abies',\n                        'Cunninghamia',\n                        'Chamaecyparis',\n                        'Sequoiadendron',\n                        'Sequoia',\n                        'Thujopsis',\n                        'Taxus',\n                        'Lepidopthamnus',\n                    ],\n                ],\n            ],\n        ],\n        [\n            'Palms',\n            'hsl(240, 50%,40%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    [\n                        'Phoenix',\n                        'Washingtonia',\n                        'Jubaea',\n                        'Chamaerops',\n                        'Syagrus',\n                        'Livistona',\n                        'Trachycarpus',\n                    ],\n                ],\n            ],\n        ],\n        [\n            'Chestnut',\n            'hsl(240,30%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Aesculus']]],\n        ],\n        [\n            'Elm',\n            'hsl(0,30%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Ulmus']]],\n        ],\n        [\n            'Plums',\n            'hsl(260,70%,60%)',\n            ['in', ['get', 'genus'], ['literal', ['Prunus']]],\n        ],\n        // ['', \"hsl(90,30%,60%)\", ['in', ['get', 'genus'], ['literal', ['']]]],\n        // ['', \"hsl(90,30%,60%)\", ['in', ['get', 'genus'], ['literal', ['']]]],\n        [\n            'East Asian exotics',\n            'hsl(310,80%,30%)',\n            [\n                'in',\n                ['get', 'genus'],\n                [\n                    'literal',\n                    [\n                        'Ginkgo',\n                        'Koelreuteria',\n                        'Zelkova',\n                        'Styphnolobium',\n                        'Cercidiphyllum',\n                    ],\n                ],\n            ],\n        ],\n        ['', 'hsl(90,30%,60%)', ['in', ['get', 'genus'], ['literal', ['']]]],\n    ],\n\n    family: [\n        [\n            'Unknown',\n            'hsla(0, 0%, 0%, 0.3)',\n            ['==', ['coalesce', ['get', 'family'], ''], ''],\n        ],\n        ['Myrtaceae', colors[0], ['==', ['get', 'family'], 'Myrtaceae']],\n        ['Fabaceae', colors[1], ['==', ['get', 'family'], 'Fabaceae']],\n        ['Rosaceae', colors[2], ['==', ['get', 'family'], 'Rosaceae']],\n        [\n            'Casuarinaceae',\n            colors[3],\n            ['==', ['get', 'family'], 'Casuarinaceae'],\n        ],\n        ['Ulmaceae', colors[4], ['==', ['get', 'family'], 'Ulmaceae']],\n        ['Proteaceae', colors[5], ['==', ['get', 'family'], 'Proteaceae']],\n        ['Oleaceae', colors[6], ['==', ['get', 'family'], 'Oleaceae']],\n        ['Fagaceae', colors[7], ['==', ['get', 'family'], 'Fagaceae']],\n        ['Meliaceae', colors[8], ['==', ['get', 'family'], 'Meliaceae']],\n        [\n            'Pittosporaceae',\n            colors[9],\n            ['==', ['get', 'family'], 'Pittosporaceae'],\n        ],\n        ['Bignoniaceae', colors[10], ['==', ['get', 'family'], 'Bignoniaceae']],\n        ['Pinaceae', colors[11], ['==', ['get', 'family'], 'Pinaceae']],\n        ['Malvaceae', colors[12], ['==', ['get', 'family'], 'Malvaceae']],\n        [\n            'Anacardiaceae',\n            colors[13],\n            ['==', ['get', 'family'], 'Anacardiaceae'],\n        ],\n        ['Arecaceae', colors[14], ['==', ['get', 'family'], 'Arecaceae']],\n        ['Lythraceae', colors[15], ['==', ['get', 'family'], 'Lythraceae']],\n        ['Sapindaceae', colors[16], ['==', ['get', 'family'], 'Sapindaceae']],\n        ['Betulaceae', colors[17], ['==', ['get', 'family'], 'Betulaceae']],\n        ['Cupressaceae', colors[18], ['==', ['get', 'family'], 'Cupressaceae']],\n        [\n            'Araucariaceae',\n            colors[19],\n            ['==', ['get', 'family'], 'Araucariaceae'],\n        ],\n    ],\n\n    rarity: [\n        // these were: 1, 5, 20, 100, 1000, 10000\n        ['Super common', 'hsla(210, 90%,60%, 0.5)', 300e3],\n        ['Very common', 'hsla(160, 90%,60%, 0.6)', 20e3],\n        ['Common', 'hsla(120, 80%,60%, 0.7)', 2000],\n        ['Average', 'hsla(60, 80%,50%, 0.8)', 100],\n        ['Rare', 'hsla(30, 80%, 50%, 0.9)', 12],\n        ['Very rare', 'hsla(0, 100%, 40%, 1)', 1],\n        ['Unknown', 'hsla(0, 0%, 0%, 0.3)', 0],\n    ],\n    health: [\n        [\n            'Excellent',\n            'hsla(170, 100%,50%, 0.8)',\n            [\n                'Very Good',\n                'Excellent',\n                'excellent',\n                '90',\n                '95',\n                '100',\n                'VERY GOOD',\n                'EXCELLENT',\n                'EXCL',\n            ],\n        ],\n        [\n            'Good',\n            'hsla(130, 80%,50%, 0.8)',\n            ['Good', 'good', 'High vigour', '80', '83', '85', 'VIVANT', 'GOOD'],\n        ],\n        [\n            'Fair',\n            'hsla(70, 80%, 40%, 0.9)',\n            [\n                'Fair',\n                'fair',\n                'Medium vigour',\n                '60',\n                '68',\n                '70',\n                'Alive',\n                'FAIR',\n            ],\n        ], // seriously where does \"alive\" go?\n        [\n            'Poor',\n            'hsla(30, 80%, 50%, 1)',\n            [\n                'Poor',\n                'poor',\n                'Low vigour',\n                'Dead wood',\n                '40',\n                '50',\n                '53',\n                'POOR',\n            ],\n        ],\n        [\n            'Very poor',\n            'hsla(0, 100%, 30%, 1)',\n            [\n                'Very Poor',\n                'Dying',\n                'dying',\n                'Dying tree',\n                '20',\n                '25',\n                '30',\n                'Critical',\n                'VERY POOR',\n            ],\n        ],\n        [\n            'Dead',\n            'hsla(330, 30%,10%, 0.9)',\n            [\n                'Dead',\n                'dead',\n                'Stump',\n                'stump',\n                '0',\n                '10',\n                'SOUCHE' /* stump*/,\n                'DEAD',\n            ],\n        ],\n        [\n            'N/A',\n            'hsla(0,0%,50%,0.5)',\n            ['', 'N/A', ' ', 'Unassigned', 'Unknown', 'NA', 'Very'],\n        ],\n        ['Other', 'hsla(260,80%,50%,0.7)', ['Other']],\n    ],\n    maturity: [\n        // no idea about Paris' single letter codes really\n        [\n            'Over-mature',\n            'hsla(0, 80%,50%, 0.8)',\n            [\n                'Over-mature',\n                'Over-Mature',\n                'Over Mature',\n                'On Maintenance',\n                'Senescent',\n                'Scenescent',\n                'Decline',\n                'M',\n                'Arbre vieillissant',\n                'sénescent',\n                'vieux',\n                'Veteran',\n            ],\n        ],\n        [\n            'Mature',\n            'hsla(40, 100%, 50%, 0.9)',\n            [\n                'Mature',\n                'A',\n                'Arbre adulte',\n                'adulte',\n                'Adulte',\n                'Fully Mature',\n                'Volwassen',\n            ],\n        ],\n        [\n            'Semi-mature',\n            'hsla(100, 50%, 50%, 0.9)',\n            [\n                'Semi-mature',\n                'Semi-Mature',\n                'Semi mature',\n                'Early-Mature',\n                'JA',\n                'Young Mature',\n                'Middle Aged',\n                'Halfwas',\n            ],\n        ],\n        // where does \"Vigorous\" go?\n        [\n            'Young',\n            'hsla(160, 90%, 50%, 1)',\n            [\n                'Young',\n                'Juvenile',\n                'J',\n                'Arbre jeune',\n                'jeune',\n                'Jeune',\n                'Immature',\n                'Jong',\n            ],\n        ],\n        [\n            'New',\n            'hsla(220, 100%, 50%, 1)',\n            ['New', 'New Planting', 'Newly Planted'],\n        ],\n        // ['Very poor', 'hsla(0, 100%, 30%, 1)', ['Very Poor', 'Dying','dying', 'Dying tree',  '20', '30',  'Critical']],\n        // ['Dead', 'hsla(330, 30%,10%, 0.9)', ['Dead','dead','Stump','stump', '0', '10', 'SOUCHE' /* stump*/]],\n        ['N/A', 'hsla(0,0%,50%,0.5)', ['', 'N/A', 'Not Specified']],\n        ['Other', 'hsla(260,80%,50%,0.7)', ['Other']],\n    ],\n    harm: [\n        [\n            'Odour',\n            'hsl(240, 90%,60%)',\n            ['in', ['get', 'scientific'], ['literal', ['Pyrus calleryana']]],\n        ],\n        [\n            'Allergy',\n            'hsl(10, 90%,60%)',\n            [\n                'in',\n                ['get', 'scientific'],\n                ['literal', ['Platanus x acerifolia', 'Platanus acerifolia']],\n            ],\n        ],\n        [\n            'Skin irritation',\n            'hsl(60, 90%,40%)',\n            ['in', ['get', 'genus'], ['literal', ['Lagunaria']]],\n        ],\n        [\n            'Poisonous',\n            'hsl(300, 90%,50%)',\n            [\n                'any',\n                ['in', ['get', 'genus'], ['literal', ['Nerium']]],\n                ['in', ['get', 'scientific'], ['literal', ['Melia azedarach']]],\n            ],\n        ],\n\n        [\n            'Poisonous for dogs',\n            'hsl(300, 30%,40%)',\n            [\n                'any',\n                [\n                    'in',\n                    ['get', 'scientific'],\n                    [\n                        'literal',\n                        ['Prunus serrulata', 'Cotoneaster glaucophylla'],\n                    ],\n                ],\n                ['in', ['get', 'species'], ['literal', 'pseudoacacia']],\n            ],\n            ['in', ['get', 'genus'], ['literal', ['Quercus']]],\n        ],\n    ],\n    edible: [\n        [\n            'Apple/crabapple',\n            'hsl(0,80%,30%)',\n            ['==', ['get', 'genus'], 'Malus'],\n        ],\n        [\n            'Cherry plum',\n            'hsl(280,80%,30%)',\n            [\n                'all',\n                ['==', ['get', 'genus'], 'Prunus'],\n                ['==', ['get', 'species'], 'cerasifera'],\n            ],\n        ],\n        [\n            'Peach',\n            'hsl(30,100%,60%)',\n            [\n                'all',\n                ['==', ['get', 'genus'], 'Prunus'],\n                ['==', ['get', 'species'], 'persica'],\n            ],\n        ],\n        [\n            'Cherry',\n            'hsl(330,80%,30%)',\n            [\n                'all',\n                ['==', ['get', 'genus'], 'Prunus'],\n                ['==', ['get', 'species'], 'avium'],\n            ],\n        ], // cerasus...\n        // ['Stone fruit', 'blue', ['==', ['get', 'genus'], 'Prunus']],\n        ['Citrus', 'yellow', ['==', ['get', 'genus'], 'Citrus']],\n        ['Mango', 'hsl(50,80%,40%)', ['==', ['get', 'genus'], 'Mangifera']],\n        [\n            'Fig',\n            'hsl(100,90%,40%)',\n            [\n                'all',\n                ['==', ['get', 'genus'], 'Ficus'],\n                ['==', ['get', 'species'], 'carica'],\n            ],\n        ], // maybe others too\n        [\n            'Quandong',\n            'hsl(340,95%,46%)',\n            [\n                'all',\n                ['==', ['get', 'genus'], 'Santalum'],\n                ['==', ['get', 'species'], 'acuminatum'],\n            ],\n        ],\n        [\n            'Loquat',\n            'hsl(150,95%,46%)',\n            [\n                'all',\n                ['==', ['get', 'genus'], 'Eriobotrya'],\n                ['==', ['get', 'species'], 'japonica'],\n            ],\n        ],\n    ],\n    trunk: [],\n    label: [],\n    local: [], // populated dynamically\n};\nconst visLayers = Object.keys(visGroups).map((k) => `trees-vis-${k}`);\nimport 'mapbox-gl/dist/mapbox-gl.css';\n</script>\n\n<style scoped>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Map.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Map.vue?vue&type=template&id=6c223054&scoped=true&lang=pug&\"\nimport script from \"./Map.vue?vue&type=script&lang=js&\"\nexport * from \"./Map.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6c223054\",\n  null\n  \n)\n\ncomponent.options.__file = \"Map.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.feature)?_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"bg-green\"},[_c('h2',{staticClass:\"i lancelot f3 pa2 mv0 bg-green\"},[_vm._v(_vm._s(_vm.p.common || _vm.p.scientific || _vm.p.description))])]),(_vm.p.class)?_c('div',{staticClass:\"cl f7 pa2 i\"},[_vm._v(_vm._s(_vm.p.class)+\" \"),_c('span',{staticClass:\"light-green\"},[_vm._v(\"> \")]),_vm._v(_vm._s(_vm.p.subclass)+\" \"),_c('span',{staticClass:\"light-green\"},[_vm._v(\"> \")]),_vm._v(_vm._s(_vm.p.family))]):_vm._e(),(_vm.feature)?_c('table',{staticClass:\"bg-white helvetica ma1\",attrs:{\"id\":\"FeatureInfo\"}},[(_vm.p.scientific)?_c('tr',[_c('th',[_vm._v(\"Scientific name\")]),_c('td',[_vm._v(_vm._s(_vm.p.scientific))])]):_vm._e(),(_vm.showExtra)?[(_vm.p.genus)?_c('tr',[_c('th',[_vm._v(\"Genus/species\")]),_c('td',[_vm._v(_vm._s(_vm.p.genus)+\" \"+_vm._s(_vm.p.species))])]):_vm._e()]:_vm._e(),(_vm.p.common)?_c('tr',[_c('th',[_vm._v(\"Common name\")]),_c('td',[_vm._v(_vm._s(_vm.p.common))])]):_vm._e(),(!_vm.p.common && !_vm.p.scientific)?_c('tr',[_c('td',[_vm._v(\"No species information available.\")])]):_vm._e(),(_vm.p.description)?_c('tr',[_c('th',[_vm._v(\"Description\")]),_c('td',[_vm._v(_vm._s(_vm.p.description))])]):_vm._e(),(_vm.p.variety)?_c('tr',[_c('th',[_vm._v(\"Variety\")]),_c('td',[_vm._v(_vm._s(_vm.p.variety))])]):_vm._e(),(Number.isFinite(Number(_vm.p.dbh)))?_c('tr',[_c('th',[_vm._v(\"Diameter\")]),_c('td',[_vm._v(_vm._s(Math.round(_vm.p.dbh))+\" \"),_c('span',{staticClass:\"detail\"},[_vm._v(\"cm.\")])])]):_vm._e(),(_vm.p.height)?_c('tr',[_c('th',[_vm._v(\"Height\")]),_c('td',[_vm._v(_vm._s(Number.isFinite(Number(_vm.p.height)) ? Math.round(Number(_vm.p.height)) : _vm.p.height)+\" \"),_c('span',{staticClass:\"detail\"},[_vm._v(\"m.\")])])]):_vm._e(),(_vm.p.health)?_c('tr',[_c('th',[_vm._v(\"Health\")]),_c('td',[_vm._v(_vm._s(_vm.p.health))])]):_vm._e(),(_vm.p.structure)?_c('tr',[_c('th',[_vm._v(\"Structure\")]),_c('td',[_vm._v(_vm._s(_vm.p.structure))])]):_vm._e(),(_vm.p.planted)?_c('tr',[_c('th',[_vm._v(\"Planted date\")]),_c('td',[_vm._v(_vm._s(_vm.p.planted))])]):_vm._e(),(_vm.p.maturity)?_c('tr',[_c('th',[_vm._v(\"Maturity\")]),_c('td',[_vm._v(_vm._s(_vm.p.maturity))])]):_vm._e(),(_vm.p.species_count)?_c('tr',[_c('th',[_vm._v(\"Count\")]),_c('td',[_vm._v(_vm._s(_vm.p.species_count.toLocaleString())+\" \"),_c('span',{staticClass:\"detail\"},[_vm._v(\"similar trees\")])])]):_vm._e(),(_vm.p.ref)?_c('tr',[_c('th',[_vm._v(\"ID\")]),_c('td',[_vm._v(_vm._s((\"#\" + (_vm.p.ref))))])]):_vm._e(),(_vm.showExtra)?_vm._l((_vm.p),function(value,prop){return _c('tr',[(_vm.ignoreProps.indexOf(prop) === -1)?[_c('th',{staticClass:\"f6 dark-green\"},[_vm._v(_vm._s(prop))]),_c('td',{staticClass:\"f6\"},[_vm._v(_vm._s(value))])]:_vm._e()],2)}):_vm._e()],2):_vm._e(),_c('p',{staticClass:\"f7 gray mh2 i mv0\"},[_vm._v(\"Source: \"),_c('a',{attrs:{\"href\":\"#\"},on:{\"click\":_vm.clickSource}},[_vm._v(_vm._s(_vm.sourceName))]),(_vm.p.updated)?_c('span',[_vm._v(\" (\"+_vm._s(_vm.p.updated)+\")\")]):_vm._e(),(_vm.license)?_c('span',[_vm._v(\" (\"),_c('a',{attrs:{\"href\":(\"https://spdx.org/licenses/\" + _vm.license),\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.license))]),_vm._v(\")\")]):_vm._e()]),_c('p',{staticClass:\"f7 mh2 gray i mv0\"},[_vm._v(\"See on \"),_c('a',{attrs:{\"href\":(\"https://www.google.com/maps/@?api=1&map_action=pano&viewpoint=\" + (_vm.feature.geometry.coordinates.slice().reverse())),\"target\":\"_blank\"}},[_vm._v(\"StreetView\")]),_vm._v(\".\")]),_c('Wikipedia',{attrs:{\"searchTerm\":_vm.p.genus + (_vm.p.species ? ' ' + _vm.p.species : '')}})],1):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.searchTerm),expression:\"searchTerm\"}],staticClass:\"pa2\",attrs:{\"id\":\"Wikipedia\"}},[(_vm.text)?_c('div',[_c('img',{attrs:{\"src\":_vm.imageUrl}}),_c('p',{domProps:{\"innerHTML\":_vm._s(_vm.text)}}),_c('p',[_c('small',[_vm._v(\"Read more on \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.wikiLink}},[_vm._v(\"Wikipedia\")])])])]):(_vm.loading)?_c('div',[_c('p',{staticClass:\"i\"},[_vm._v(\"Looking up Wikipedia...\")])]):_c('div',[_c('p',[_vm._v(\"Nothing found on \"),_c('a',{attrs:{\"target\":\"_blank\",\"href\":_vm.wikiSearchLink}},[_vm._v(\"Wikipedia\")]),_vm._v(\".\")])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Wikipedia.pa2(v-show=\"searchTerm\")\n    div(v-if=\"text\")\n        img(:src=\"imageUrl\")\n        p(v-html=\"text\")\n        p <small>Read more on <a target=\"_blank\" :href=\"wikiLink\"\">Wikipedia</a></small>\n    div(v-else-if=\"loading\")\n        p.i Looking up Wikipedia...\n    div(v-else)\n        //- | Nothing on <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Special:Search/' + encodeURIComponent(this.searchTerm) + '\">Wikipedia</a>.';\n        p Nothing found on <a target=\"_blank\" :href=\"wikiSearchLink\">Wikipedia</a>.\n</template>\n\n<script>\nimport axios from 'axios';\nconst corsAnywhere = ''; //'https://cors-anywhere.herokuapp.com/';\nconst wikiapi =\n    corsAnywhere +\n    'http://en.wikipedia.org/w/api.php?action=query&format=json&origin=*';\nconst textapi = wikiapi + '&prop=extracts&redirects&titles=';\nconst imageapi = wikiapi + '&prop=pageimages&redirects&titles=';\n\nexport default {\n    name: 'Wikipedia',\n    data: () => ({\n        imageUrl: undefined,\n        text: undefined,\n        title: undefined,\n        loading: false,\n    }),\n    props: ['searchTerm'],\n    created() {\n        window.Wikipedia = this;\n    },\n    mounted() {\n        this.doSearch();\n    },\n    computed: {\n        wikiLink() {\n            return `http://en.wikipedia.org/wiki/${encodeURIComponent(\n                this.title\n            )}`;\n        },\n        wikiSearchLink() {\n            return `https://en.wikipedia.org/w/index.php?search=${\n                this.searchTerm\n            }`;\n            // return `http://en.wikipedia.org/wiki/${encodeURIComponent(this.searchTerm)}`;\n        },\n    },\n    methods: {\n        doSearch() {\n            this.text = undefined;\n            this.title = undefined;\n            this.imageUrl = undefined;\n            this.loading = true;\n\n            // Bring this back - concerned about reactive cascades\n            // if (this.searchTerm === 'acer') {\n            //     this.searchTerm = 'Acer (plant)';\n            // }\n            if (!this.searchTerm) {\n                return;\n            }\n            console.log('Searching Wikipedia for: ' + this.searchTerm);\n\n            axios\n                .get(imageapi + encodeURIComponent(this.searchTerm))\n                .then((response) => {\n                    const pages = response.data.query.pages;\n                    const page = pages[Object.keys(pages)[0]];\n                    if (page && page.thumbnail && page.thumbnail.source) {\n                        // TODO: if there is no high res image available, then the call to thumb/600px- fails. Not easy to handle\n                        // without making the failing call and then trying again.\n                        const thumb = page.thumbnail.source.replace(\n                            /\\/\\d\\dpx-/,\n                            window.devicePixelRatio > 1 ? '/600px-' : '/300px-'\n                        );\n                        this.imageUrl = thumb;\n                    }\n                });\n\n            axios\n                .get(textapi + encodeURIComponent(this.searchTerm))\n                .then((response) => {\n                    this.loading = false;\n                    const pages = response.data.query.pages;\n                    const page = pages[Object.keys(pages)[0]];\n\n                    if (page && page.extract) {\n                        this.title = page.title;\n                        this.text = page.extract;\n                    } else {\n                        this.imageUrl = undefined;\n                        this.text = undefined;\n                    }\n                });\n        },\n    },\n    watch: {\n        searchTerm() {\n            this.doSearch();\n        },\n    },\n};\n</script>\n\n<style>\n#Wikipedia h2 {\n    font-size: 16px;\n    margin-bottom: 0;\n    padding: 0;\n}\n#Wikipedia p {\n    margin-top: 0;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Wikipedia.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Wikipedia.vue?vue&type=template&id=473abb5d&lang=pug&\"\nimport script from \"./Wikipedia.vue?vue&type=script&lang=js&\"\nexport * from \"./Wikipedia.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Wikipedia.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"Wikipedia.vue\"\nexport default component.exports","<template lang=\"pug\">\ndiv\n    .panel(v-if=\"feature\")\n        //- img.image(v-if=\"imageUrl\" :src=\"imageUrl\")\n        div.bg-green\n            h2.i.lancelot.f3.pa2.mv0.bg-green {{ p.common || p.scientific || p.description }}\n        div.cl(v-if=\"p.class\").f7.pa2.i\n            | {{ p.class }} \n            span.light-green > \n            | {{ p.subclass }} \n            span.light-green > \n            | {{ p.family }}\n            \n        table#FeatureInfo(v-if=\"feature\").bg-white.helvetica.ma1\n            tr(v-if=\"p.scientific\")\n                th Scientific name\n                td {{ p.scientific }}\n            template(v-if=\"showExtra\")\n                tr(v-if=\"p.genus\")\n                    th Genus/species\n                    td {{ p.genus }} {{ p.species }}\n                //- tr(v-if=\"p.species\")d\n                //-     th Species\n                //-     td {{ p.species }}\n            tr(v-if=\"p.common\")\n                th Common name\n                td {{ p.common }}\n            tr(v-if=\"!p.common && !p.scientific\")\n                //- th Scientific name\n                td No species information available.\n            tr(v-if=\"p.description\")\n                th Description\n                td {{ p.description }}\n            tr(v-if=\"p.variety\")\n                th Variety\n                td {{ p.variety }}\n            tr(v-if=\"Number.isFinite(Number(p.dbh))\")\n                th Diameter\n                td {{ Math.round(p.dbh) }} \n                    span.detail cm.\n            tr(v-if=\"p.height\")\n                th Height\n                td {{ Number.isFinite(Number(p.height)) ? Math.round(Number(p.height)) : p.height }} \n                    span.detail m.\n            tr(v-if=\"p.health\")\n                th Health\n                td {{ p.health }}\n            tr(v-if=\"p.structure\")\n                th Structure\n                td {{ p.structure }}\n            tr(v-if=\"p.planted\")\n                th Planted date\n                td {{ p.planted }}\n            tr(v-if=\"p.maturity\")\n                th Maturity\n                td {{ p.maturity }}\n            //- tr(v-if=\"p.\")\n            //-     th \n            //-     td {{ p }}\n            tr(v-if=\"p.species_count\")\n                th Count\n                td {{ p.species_count.toLocaleString() }} \n                    span.detail similar trees\n            tr(v-if=\"p.ref\")\n                th ID\n                td {{ `#${p.ref}` }}\n            template(v-if=\"showExtra\")\n                tr(v-for=\"(value, prop) in p\")\n                \n                    template(v-if=\"ignoreProps.indexOf(prop) === -1\")\n                        th.f6.dark-green {{ prop }}\n                        td.f6 {{ value }}\n        p.f7.gray.mh2.i.mv0 Source: \n            a(href=\"#\" @click=\"clickSource\") {{ sourceName }}\n            span(v-if=\"p.updated\")  ({{ p.updated }})\n            span(v-if=\"license\")\n                |  (\n                a(:href=\"`https://spdx.org/licenses/${license}`\" target=\"_blank\") {{ license }}\n                | )\n            \n        p.f7.mh2.gray.i.mv0 See on \n            a(:href=\"`https://www.google.com/maps/@?api=1&map_action=pano&viewpoint=${feature.geometry.coordinates.slice().reverse()}`\" target=\"_blank\") StreetView\n            | .\n        Wikipedia(:searchTerm=\"p.genus + (p.species ? ' ' + p.species : '')\")\n\n</template>\n\n<script>\nimport Wikipedia from './Wikipedia';\nimport sources from '../sources';\nimport { EventBus } from '../EventBus';\nexport default {\n    name: \"FeatureInfo\",\n    data: () => ({\n        feature: undefined,\n        ignoreProps: ['id','Longitude','Latitude', 'image_url']\n    }),\n    components: { Wikipedia },\n    computed: {\n        p() {\n            const r = this.feature && this.feature.properties || {};\n            if (!r.scientific && r.genus) {\n                r.scientific = r.genus + (r.species ? ` ${r.species}`:'');\n            }\n            return r;\n        },\n        imageUrl() {\n            return this.p && this.p.image_url\n        },\n        license() {\n            const source = this.p.source && sources.find(s => s.id === this.p.source);\n            return source && source.license;\n        },\n        showExtra() {\n            return window.location.hash.match(/debug/);\n        },\n        // sourceUrl() {\n        //     console.log(sources);\n        //     const s = sources.find(s => s.id === this.p.source);\n        //     return s ? s.info || s.download : '#';\n            \n        // },\n        sourceName() {\n            console.log(sources);\n            const s = sources.find(s => s.id === this.p.source);\n            return s ? (s.long || s.short || s.id) : 'unknown';\n        }\n        \n    },\n    created() {\n        window.app.FeatureInfo = this;\n        EventBus.$on('tree-select', tree => this.feature = tree);\n        EventBus.$on('unselect-tree', () => {\n            this.feature = null;\n        });\n    },\n    watch: {\n        feature(newValue, oldValue) {\n            if (newValue) {\n                EventBus.$emit('panel-select', 'FeatureInfo');\n            }\n            \n        }\n    },\n    methods: {\n        close() {\n            console.log('close');\n            this.feature=null;\n        },\n        clickSource() {\n            EventBus.$emit('source-select', this.feature.properties.source);\n        }\n    },\n}\n</script>\n\n<style scoped>\n#FeatureInfo th {\n    text-align:  right;\n}\n\n.image {\n    width: 100%;\n}\n</style>\n<style>\nth {\n    color: hsl(100, 29.4%, 30%)\n}\ntd {\n    padding-left:8px;\n}\n.detail {\n    /* color:#444; */\n    font-weight:200;\n    font-size:75%;\n}\n\n.panel {\n     width:300px; \n     position:relative;\n}\n\n/* h2, h3, h4 {\n    font-family: Lancelot,Arial,Open Sans;\n} */\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FeatureInfo.vue?vue&type=template&id=59bba388&scoped=true&lang=pug&\"\nimport script from \"./FeatureInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./FeatureInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./FeatureInfo.vue?vue&type=style&index=0&id=59bba388&scoped=true&lang=css&\"\nimport style1 from \"./FeatureInfo.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"59bba388\",\n  null\n  \n)\n\ncomponent.options.__file = \"FeatureInfo.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.source)?_c('div',{attrs:{\"id\":\"SourceInfo\"}},[_c('div',{staticClass:\"panel\"},[_c('div',{staticClass:\"bg-green pa2\"},[_c('h2',{staticClass:\"lancelot f3 mv0 bg-green\"},[_vm._v(_vm._s(_vm.p.long || _vm.p.short || _vm.p.id))]),_c('div',{staticClass:\"dark-gray f6\"},[_vm._v(_vm._s(_vm.p.country))]),_c('i',{staticClass:\"close-btn pa2 mt1 dark-green pointer fw6 fas fa-times\",staticStyle:{\"position\":\"absolute\",\"right\":\"0\",\"top\":\"0\",\"cursor\":\"pointer\"},on:{\"click\":_vm.close}})]),_c('div',{staticClass:\"ma2\"},[_c('h3',[_vm._v(\"Accessing data:\")]),(_vm.p.info)?_c('p',[_vm._v(\"Data provided by \"),_c('a',{attrs:{\"href\":_vm.p.info,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.p.long || _vm.p.short || _vm.p.id))]),_vm._v(\".\")]):_c('p',[_vm._v(\"Data provided by \"+_vm._s(_vm.p.long || _vm.p.short || _vm.p.id))]),(_vm.licenseUrl)?_c('p',[_vm._v(\"License: \"),_c('a',{attrs:{\"href\":_vm.licenseUrl,\"target\":\"_blank\"}},[_vm._v(_vm._s(_vm.p.license))])]):_vm._e(),_c('p',[_c('a',{attrs:{\"href\":_vm.p.download,\"target\":\"_blank\"}},[_vm._v(\"Download the raw data.\")])]),(_vm.p.speciesCounts && _vm.p.speciesCounts.length > 0)?_c('div',[_c('h3',[_vm._v(\"Top species\")]),_c('table',_vm._l((_vm.p.speciesCounts || []),function(ref){\nvar species = ref[0];\nvar count = ref[1];\nreturn _c('tr',[_c('th',{staticClass:\"tl\"},[_vm._v(_vm._s(species))]),_c('td',[_vm._v(_vm._s(count.toLocaleString()))]),_c('td',{staticClass:\"light-green\"},[_vm._v(_vm._s(Math.round(100 * count / _vm.p.keepCount))+\"%\")])])}),0)]):_vm._e(),_c('h3',[_vm._v(\"Fields included:\")]),_c('table',{staticClass:\"fields\"},[_vm._m(0),_c('tr',[_c('th',[_vm._v(\"Scientific name\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('scientific')))])]),_c('tr',[_c('th',[_vm._v(\"Common name\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('common')))])]),_c('tr',[_c('th',[_vm._v(\"Genus\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Genus')))])]),_c('tr',[_c('th',[_vm._v(\"Species\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Species')))])]),_c('tr',[_c('th',[_vm._v(\"Variety\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Variety')))])]),_c('tr',[_c('th',[_vm._v(\"Family\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('family')))])]),_vm._m(1),_c('tr',[_c('th',[_vm._v(\"Diameter (DBH)\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('dbh')))])]),_c('tr',[_c('th',[_vm._v(\"Health\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('health')))])]),_c('tr',[_c('th',[_vm._v(\"Structure\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Structure')))])]),_c('tr',[_c('th',[_vm._v(\"Maturity\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('maturity')))])]),_c('tr',[_c('th',[_vm._v(\"Height\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('height')))])]),_c('tr',[_c('th',[_vm._v(\"Crown width\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('crown')))])]),_c('tr',[_c('th',[_vm._v(\"Location\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Location')))])]),_vm._m(2),_c('tr',[_c('th',[_vm._v(\"Planted date\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('planted')))])]),_c('tr',[_c('th',[_vm._v(\"Updated date\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Updated')))])]),_c('tr',[_c('th',[_vm._v(\"Useful life expectancy\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('ule')))])]),_vm._m(3),_c('tr',[_c('th',[_vm._v(\"Description\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Description')))])]),_c('tr',[_c('th',[_vm._v(\"Note\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('Note')))])]),_c('tr',[_c('th',[_vm._v(\"Reference ID\")]),_c('td',[_vm._v(_vm._s(_vm.hasField('ref')))])])]),_c('h3',[_vm._v(\"Import\")]),_c('table',[_c('tr',[_c('th',[_vm._v(\"Rows imported\")]),_c('td',[_vm._v(_vm._s(_vm.p.keepCount.toLocaleString()))])]),_c('tr',[_c('th',[_vm._v(\"Rows rejected as \\\"vacant\\\"\")]),_c('td',[_vm._v(_vm._s(_vm.p.delCount.toLocaleString()))])]),_c('tr',[_c('th',[_vm._v(\"Rows missing geometry\")]),_c('td',[_vm._v(_vm._s(_vm.p.noGeomCount.toLocaleString()))])])])])])]):_vm._e()}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',{staticClass:\"f4 pv2 pr4 tc bg-light-green\",attrs:{\"colspan\":\"2\"}},[_vm._v(\"Taxonomy\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',{staticClass:\"f4 pv2 pr4 tc bg-light-green\",attrs:{\"colspan\":\"2\"}},[_vm._v(\"Physical\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',{staticClass:\"f4 pv2 pr4 tc bg-light-green\",attrs:{\"colspan\":\"2\"}},[_vm._v(\"Dates\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',{staticClass:\"f4 pv2 pr4 tc bg-light-green\",attrs:{\"colspan\":\"2\"}},[_vm._v(\"Metadata\")])])}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#SourceInfo(v-if=\"source\")\n    .panel \n        div.bg-green.pa2\n            h2.lancelot.f3.mv0.bg-green {{ p.long || p.short || p.id }}\n            .dark-gray.f6 {{ p.country }}\n            i.close-btn.pa2.mt1.dark-green.pointer.fw6.fas.fa-times(@click=\"close\" style=\"position:absolute;right:0;top:0; cursor:pointer;\")\n\n        .ma2\n            h3 Accessing data:\n            p(v-if=\"p.info\") Data provided by \n                a(:href=\"p.info\" target=\"_blank\") {{ p.long || p.short || p.id }}\n                | .\n            p(v-else) Data provided by {{ p.long || p.short || p.id }}\n            p(v-if=\"licenseUrl\") License: \n                a(:href=\"licenseUrl\" target=\"_blank\") {{ p.license }}\n\n            p\n                a(:href=\"p.download\" target=\"_blank\") Download the raw data.\n            div(v-if=\"p.speciesCounts && p.speciesCounts.length > 0\")\n                h3 Top species\n                table\n                    tr(v-for=\"([species, count]) of p.speciesCounts || []\")\n                        th.tl {{ species }}\n                        td {{ count.toLocaleString() }}\n                        td.light-green {{ Math.round(100 * count / p.keepCount) }}%\n            h3 Fields included:\n            table.fields\n                tr\n                    td.f4.pv2.pr4.tc.bg-light-green(colspan=\"2\") Taxonomy\n                tr\n                    th Scientific name\n                    td {{ hasField('scientific') }}\n                tr\n                    th Common name\n                    td {{ hasField('common') }}\n                tr\n                    th Genus\n                    td {{ hasField('Genus') }}\n                tr\n                    th Species\n                    td {{ hasField('Species') }}\n                tr\n                    th Variety\n                    td {{ hasField('Variety') }}\n                tr\n                    th Family\n                    td {{ hasField('family') }}\n                tr\n                    td.f4.pv2.pr4.tc.bg-light-green(colspan=\"2\") Physical\n                tr\n                    th Diameter (DBH)\n                    td {{ hasField('dbh') }}\n                tr\n                    th Health\n                    td {{ hasField('health') }}\n                tr\n                    th Structure\n                    td {{ hasField('Structure') }}\n                tr\n                    th Maturity\n                    td {{ hasField('maturity') }}\n                tr\n                    th Height\n                    td {{ hasField('height') }}\n                tr\n                    th Crown width\n                    td {{ hasField('crown') }}\n                tr\n                    th Location\n                    td {{ hasField('Location') }}\n                tr\n                    td.f4.pv2.pr4.tc.bg-light-green(colspan=\"2\") Dates\n                tr\n                    th Planted date\n                    td {{ hasField('planted') }}\n                tr\n                    th Updated date\n                    td {{ hasField('Updated') }}\n                tr\n                    th Useful life expectancy\n                    td {{ hasField('ule') }}\n                tr\n                    td.f4.pv2.pr4.tc.bg-light-green(colspan=\"2\") Metadata\n                tr\n                    th Description\n                    td {{ hasField('Description') }}\n                tr\n                    th Note\n                    td {{ hasField('Note') }}\n                tr\n                    th Reference ID\n                    td {{ hasField('ref') }}\n            h3 Import\n            table\n                tr  \n                    th Rows imported\n                    td {{ p.keepCount.toLocaleString() }}\n                tr\n                    th Rows rejected as \"vacant\"\n                    td {{ p.delCount.toLocaleString() }}\n                tr\n                    th Rows missing geometry\n                    td {{ p.noGeomCount.toLocaleString() }}\n\n</template>\n\n<script>\nimport sources from '../sources';\nimport { EventBus } from '../EventBus';\nexport default {\n    name: \"SourceInfo\",\n    data: () => ({\n        source: undefined\n    }),\n    computed: {\n        p() {\n            return this.source ;\n        },\n        licenseUrl() {\n            if (this.p.license) {\n                if (this.p.license.match(/^http/)) {\n                    return this.p.license;\n                } else {\n                    return `https://spdx.org/licenses/${this.p.license}`;\n                }\n            }\n            return undefined;\n        }\n    },\n    created() {\n        window.SourceInfo = this;\n        EventBus.$on('source-select', sourceId => {\n            this.source = sources.find(s => s.id === sourceId);\n            console.log(sourceId, this.source);\n        });\n        EventBus.$on('tree-select', () => this.source = null);\n    },\n    methods: {\n        hasField(fieldName) {\n            return this.source.crosswalk[fieldName.toLowerCase()] ? 'Yes' : '-'\n            \n        },\n        close() {\n            this.about = false;\n        },\n    },\n}\n</script>\n\n<style scoped>\n.panel {\n    width:300px;\n}\n.fields th {\n    text-align: right;\n}\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SourceInfo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SourceInfo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SourceInfo.vue?vue&type=template&id=b733c1de&scoped=true&lang=pug&\"\nimport script from \"./SourceInfo.vue?vue&type=script&lang=js&\"\nexport * from \"./SourceInfo.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SourceInfo.vue?vue&type=style&index=0&id=b733c1de&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"b733c1de\",\n  null\n  \n)\n\ncomponent.options.__file = \"SourceInfo.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ph2\",attrs:{\"id\":\"About\"}},[_c('h3',[_vm._v(\"About \"),_c('span',{staticClass:\"lancelot dark-green f3\"},[_vm._v(\"OpenTrees.org\")])]),_c('p',[_c('span',{staticClass:\"lancelot dark-green f4\"},[_vm._v(\"OpenTrees.org \")]),_vm._v(\"is the world's largest database of municipal street and park trees, produced by harvesting open data from dozens of different sources.\")]),_c('div',{staticClass:\"i b dark-green\"},[_vm._v(\"Click any tree to learn about it.\")]),_c('p'),_c('h4',[_vm._v(\"Why does this data exist?\")]),_c('p',[_vm._v(\"Local governments collect tree data for several reasons:\")]),_c('ul',[_c('li',[_vm._v(\"To guide their choices of what to plant next.\")]),_c('li',[_vm._v(\"To manage risk of branches falling.\")]),_c('li',[_vm._v(\"To manage pruning, watering and inspection schedules.\")]),_c('li',[_vm._v(\"To plan for continuous canopy coverage as trees age.\")])]),_c('h4',[_vm._v(\"There's a tree missing!\")]),_c('p',[_vm._v(\"Every tree database is incomplete and out of date. A source might be missing a tree because:\"),_c('ul',[_c('li',[_vm._v(\"It only covers \\\"significant trees\\\".\")]),_c('li',[_vm._v(\"It only includes trees directly managed by the government body, not private properties, schools etc.\")]),_c('li',[_vm._v(\"It only covers parks, or streets.\")]),_c('li',[_vm._v(\"The tree was surveyed once, a long time ago, and the data isn't maintained.\")])])]),_c('h4',[_vm._v(\"Why are all the trees showing as grey in some areas?\")]),_c('p',[_vm._v(\"Some of the data sources don't include species information. This can happen when either it isn't collected or isn't included in the data export for some reason.\")]),_c('h4',[_vm._v(\"Family information is incomplete\")]),_c('p',[_vm._v(\"The source I'm using only covers Australian species. I'll need to do something about that.\")]),_c('h4',[_vm._v(\"How do I get my city on \"),_c('span',{staticClass:\"lancelot dark-green f4\"},[_vm._v(\"OpenTrees.org\")]),_vm._v(\"?\")]),_c('ol',[_c('li',[_vm._v(\"Find out if your city even has a tree database.\")]),_c('li',[_vm._v(\"Find out if it is published as open data. If not, try to convince them to do so.\")]),_c('li',[_c('a',{attrs:{\"href\":\"https://github.com/stevage/opentrees/issues\"}},[_vm._v(\"Raise an issue\")]),_vm._v(\" to include it \")])]),_c('h4',[_vm._v(\"Is there a way for me to help maintain the tree data in my area?\")]),_c('p',[_vm._v(\"A couple of the tree databases appear to be crowdsourced, such as \"),_c('a',{attrs:{\"href\":\"https://www.portlandoregon.gov/parks/53181\"}},[_vm._v(\"Portland, Oregon\")]),_vm._v(\". Most are maintained either directly by government employees, or outsourced to a specialist arborist company. However it would be possible to start a project on \"),_c('a',{attrs:{\"href\":\"https://www.inaturalist.org/\"}},[_vm._v(\"inaturalist.org\")]),_vm._v(\" and import that data, for instance.\")]),_c('h4',[_vm._v(\"How did you build it?\")]),_c('p',[_c('a',{attrs:{\"href\":\"https://stevebennett.me/2015/04/07/opentrees-org-how-to-aggregate-373000-trees-from-9-open-data-sources/\"}},[_vm._v(\"In 2015\")]),_vm._v(\", it used Postgres and TileMill.\")]),_c('p',[_c('a',{attrs:{\"href\":\"https://stevebennett.me/2018/05/15/you-might-not-need-postgis-streamlined-vector-tile-processing-for-big-map-visualisations/\"}},[_vm._v(\"In 2018\")]),_vm._v(\", I rewrote it using Mapbox-GL-JS and no database. \")]),_c('p',[_vm._v(\"In 2020, I rewrote it again using VueJS. (No blog post yet!)\")]),_c('h4',[_vm._v(\"Where is the source code?\")]),_c('p',[_vm._v(\"On \"),_c('a',{attrs:{\"href\":\"https://github.com/stevage/opentrees\"}},[_vm._v(\"Github\")]),_vm._v(\".\")]),_c('h4',[_vm._v(\"Who made this?\")]),_c('p',[_vm._v(\"Me, Steve Bennett, a freelance web developer, data visualisation and Mapbox expert based in Melbourne, Australia. You can see the rest of my portfolio at \"),_c('a',{attrs:{\"href\":\"https://hire.stevebennett.me\"}},[_vm._v(\"hire.stevebennett.me\")]),_vm._v(\".\")])])}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#About.ph2\n    //- i.close-btn.pa2.mt1.dark-green.pointer.fw6.fas.fa-times(@click=\"close\" style=\"position:absolute;right:0;top:0; cursor:pointer;\")\n    h3 About \n        span.lancelot.dark-green.f3 OpenTrees.org\n    p \n        span.lancelot.dark-green.f4 OpenTrees.org \n        | is the world's largest database of municipal street and park trees, produced by harvesting open data from dozens of different sources.\n        .i.b.dark-green Click any tree to learn about it.\n    h4 Why does this data exist?\n    p Local governments collect tree data for several reasons:\n    ul\n        li To guide their choices of what to plant next.\n        li To manage risk of branches falling.\n        li To manage pruning, watering and inspection schedules.\n        li To plan for continuous canopy coverage as trees age.\n    h4 There's a tree missing!\n    p Every tree database is incomplete and out of date. A source might be missing a tree because:\n        ul\n            li It only covers \"significant trees\".\n            li It only includes trees directly managed by the government body, not private properties, schools etc.\n            li It only covers parks, or streets.\n            li The tree was surveyed once, a long time ago, and the data isn't maintained.\n    h4 Why are all the trees showing as grey in some areas?\n    p Some of the data sources don't include species information. This can happen when either it isn't collected or isn't included in the data export for some reason.\n    h4 Family information is incomplete\n    p The source I'm using only covers Australian species. I'll need to do something about that.\n    h4 How do I get my city on \n        span.lancelot.dark-green.f4 OpenTrees.org\n        | ?\n    ol\n        li Find out if your city even has a tree database.\n        li Find out if it is published as open data. If not, try to convince them to do so.\n        li <a href=\"https://github.com/stevage/opentrees/issues\">Raise an issue</a> to include it \n    h4 Is there a way for me to help maintain the tree data in my area?\n    p A couple of the tree databases appear to be crowdsourced, such as <a href=\"https://www.portlandoregon.gov/parks/53181\">Portland, Oregon</a>. Most are maintained either directly by government employees, \n        | or outsourced to a specialist arborist company. However it would be possible to start a project on <a href=\"https://www.inaturalist.org/\">inaturalist.org</a> and import that data, for instance.\n    h4 How did you build it?\n    p <a href=\"https://stevebennett.me/2015/04/07/opentrees-org-how-to-aggregate-373000-trees-from-9-open-data-sources/\">In 2015</a>, it used Postgres and TileMill.\n    p <a href=\"https://stevebennett.me/2018/05/15/you-might-not-need-postgis-streamlined-vector-tile-processing-for-big-map-visualisations/\">In 2018</a>, I rewrote it using Mapbox-GL-JS and no database. \n    p In 2020, I rewrote it again using VueJS. (No blog post yet!)\n    h4 Where is the source code?\n    p On <a href=\"https://github.com/stevage/opentrees\">Github</a>.\n    h4 Who made this?\n    p Me, Steve Bennett, a freelance web developer, data visualisation and Mapbox expert based in Melbourne, Australia. \n        | You can see the rest of my portfolio at <a href=\"https://hire.stevebennett.me\">hire.stevebennett.me</a>.\n</template>\n\n<script>\nimport { EventBus } from '../EventBus';\n\nexport default {\n    name: \"About\",\n    data: () => ({\n    }),\n    created() {\n        window.About = this;\n\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=7107d340&scoped=true&lang=pug&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7107d340\",\n  null\n  \n)\n\ncomponent.options.__file = \"About.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bg-white pa1\",attrs:{\"id\":\"Mode\"}},[_c('div',{staticClass:\"only-mobile pa1 pr3 ba b--light-gray\",attrs:{\"id\":\"dropdown\"},on:{\"click\":function($event){_vm.open = !_vm.open}}},[_vm._v(_vm._s(_vm.selectedModeCaption)),_c('i',{staticClass:\"absolute right-0 mr1 fas fa-caret-down\"})]),_c('div',{class:{ 'not-mobile': !_vm.open},attrs:{\"id\":\"options\"}},_vm._l((_vm.modes),function(ref){\nvar mode = ref[0];\nvar caption = ref[1];\nvar submodeName = ref[2];\nreturn _c('div',{on:{\"click\":function($event){_vm.open = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedMode),expression:\"selectedMode\"}],staticClass:\"ma1 dib\",attrs:{\"id\":\"none\",\"id\":mode,\"type\":\"radio\"},domProps:{\"value\":mode,\"checked\":_vm._q(_vm.selectedMode,mode)},on:{\"change\":function($event){_vm.selectedMode=mode}}}),_c('label',{staticClass:\"pa1-ns dib\",attrs:{\"for\":mode}},[_vm._v(_vm._s(caption))]),(mode===_vm.selectedMode)?_c('div',[_c('h6',{staticClass:\"ma0 ml4\"},[_vm._v(_vm._s(submodeName))]),_vm._l((_vm.activeSubmodes),function(ref){\nvar submode = ref[0];\nvar subcaption = ref[1];\nreturn _c('div',{on:{\"click\":function($event){_vm.open = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedSubmode),expression:\"selectedSubmode\"}],staticClass:\"ma1 ml4 dib\",attrs:{\"id\":\"none\",\"id\":submode,\"type\":\"radio\"},domProps:{\"value\":submode,\"checked\":_vm._q(_vm.selectedSubmode,submode)},on:{\"change\":function($event){_vm.selectedSubmode=submode}}}),_c('label',{staticClass:\"pa1-ns dib\",attrs:{\"for\":submode}},[_vm._v(_vm._s(subcaption))])])})],2):_vm._e()])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Mode.bg-white.pa1\n    #dropdown.only-mobile.pa1.pr3.ba.b--light-gray(@click=\"open = !open\") {{ selectedModeCaption }}\n        //- i.ml2.fas.fa-caret-down\n        i.absolute.right-0.mr1.fas.fa-caret-down\n    #options(:class=\"{ 'not-mobile': !open}\")\n        div(v-for=\"([mode, caption, submodeName]) in modes\" @click=\"open = false\")\n            input.ma1.dib#none(:id=\"mode\" type=\"radio\" :value=\"mode\" v-model=\"selectedMode\") \n            label.pa1-ns.dib(:for=\"mode\") {{ caption }}\n            div(v-if=\"mode===selectedMode\")\n                h6.ma0.ml4 {{ submodeName }}\n                div(v-for=\"([submode, subcaption]) in activeSubmodes\" @click=\"open = false\")\n                    input.ma1.ml4.dib#none(:id=\"submode\" type=\"radio\" :value=\"submode\" v-model=\"selectedSubmode\") \n                    label.pa1-ns.dib(:for=\"submode\") {{ subcaption }}\n\n\n</template>\n\n<script>\nimport { EventBus } from '../EventBus'\nexport default {\n    name: \"Mode\",\n    data: () => ({\n        selectedMode: 'none',\n        selectedSubmode: '1',\n        \n        open: false,\n        modes: [\n                ['none', 'No vis.'],\n                ['species', 'Botanical group', 'Colour scheme'],\n                ['family', 'Family'],\n                ['rarity', 'Rarity'],\n                ['local', 'Species in view'],\n                ['trunk', 'Trunk size'],\n                ['health', 'Health'],\n                ['maturity', 'Maturity'],\n                ['edible','Edible'],\n                ['label', 'Label'],\n                ['harm', 'Harm'],\n\n        ],\n        submodes: {\n            species: [\n                ['1','Australia'],\n                ['2','European']\n            ],\n            // local: [\n            //     ['species','Species'],\n            //     ['common','Common name']\n            // ]\n        }\n    }),\n    created() {\n        window.Mode = this;\n    },\n    mounted () {\n        // EventBus.$emit('vis-mode', this.selectedMode);\n    },\n    computed: {\n        selectedModeCaption() {\n            return this.modes.find(([mode, caption]) => mode === this.selectedMode)[1];\n        },\n        activeSubmodes() {\n            return this.submodes[this.selectedMode]\n        },\n        selectedModeAndSubmode() {\n            return this.selectedMode + (this.activeSubmodes ? this.selectedSubmode : '');\n        }\n    },\n    watch: {\n        selectedMode() {\n            this.selectedSubmode = this.activeSubmodes ? this.activeSubmodes[0][0] : ''; \n            EventBus.$emit('vis-mode', this.selectedModeAndSubmode);\n        },\n        selectedSubmode() {\n            EventBus.$emit('vis-mode', this.selectedModeAndSubmode);\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Mode.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Mode.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Mode.vue?vue&type=template&id=0fc45b12&scoped=true&lang=pug&\"\nimport script from \"./Mode.vue?vue&type=script&lang=js&\"\nexport * from \"./Mode.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0fc45b12\",\n  null\n  \n)\n\ncomponent.options.__file = \"Mode.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bg-white\",attrs:{\"id\":\"Legend\"}},[(_vm.zoomWarning)?_c('div',{staticClass:\"red\"},[_vm._v(_vm._s(_vm.zoomWarning))]):_vm._e(),(!_vm.zoomWarning && _vm.vals.length)?_c('div',{staticClass:\"pa2\"},[(_vm.mode === 'local')?_c('div',[_c('div',{staticClass:\"f7 i mt0 mb2-ns\"},[_vm._v(\"The most common species in the current map view\")])]):_vm._e(),_vm._l((_vm.vals),function(ref){\nvar title = ref[0];\nvar color = ref[1];\nreturn _c('div',{staticClass:\"mb2-ns\"},[_c('div',{staticClass:\"pill br4 b--gray dib ba w1 h1 mr0 v-top\",style:({ background: color})}),_c('span',{staticClass:\"f6 pl3 dib\",domProps:{\"innerHTML\":_vm._s(title)}})])})],2):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Legend.bg-white\n    .red(v-if=\"zoomWarning\") {{ zoomWarning }}\n    div.pa2(v-if=\"!zoomWarning && vals.length\")\n        div(v-if=\"mode === 'local'\")\n            .f7.i.mt0.mb2-ns The most common species in the current map view\n        div.mb2-ns(v-for=\"([title, color]) in vals\")\n            .pill.br4.b--gray.dib.ba.w1.h1.mr0.v-top(:style=\"{ background: color}\")\n            span.f6.pl3.dib(v-html=\"title\")\n</template>\n\n<script>\nimport { EventBus } from '../EventBus';\nexport default {\n    name: \"Legend\",\n    data: () => ({\n        vals: [],\n        zoom: undefined,\n        mode: undefined\n    }),\n    computed: {\n        zoomWarning() {\n            const minZooms = {\n                family: 10,\n                rarity: 10,\n                local: 12,\n                trunk: 13,\n                label: 16,\n                health:10,\n                edible: 10,\n                maturity: 12\n            }\n\n            if (this.zoom <= (minZooms[this.mode] || 1)) {\n                return 'Zoom in for this mode.'\n            }\n            return '';\n            \n        },\n        \n    },\n    created() {\n        window.Legend = this;\n        EventBus.$on('update-legend', vals => {\n            this.vals = vals\n        });\n        EventBus.$on('zoom-change', zoom => this.zoom = zoom);\n        EventBus.$on('vis-mode', mode => this.mode = mode);\n    }\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Legend.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Legend.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Legend.vue?vue&type=template&id=5ef2c852&scoped=true&lang=pug&\"\nimport script from \"./Legend.vue?vue&type=script&lang=js&\"\nexport * from \"./Legend.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5ef2c852\",\n  null\n  \n)\n\ncomponent.options.__file = \"Legend.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"ma4 pa2 bg-white overflow-scroll ba b--gray shadow-3\",staticStyle:{\"height\":\"90%\"},attrs:{\"id\":\"Stats\"}},[_c('div',[_c('table',[_c('tr',[_c('th',{attrs:{\"colspan\":\"5\"}}),_c('td',{staticClass:\"dark-gray b--gray bt bl br\",staticStyle:{\"text-align\":\"center\"},attrs:{\"colspan\":_vm.fields.length}},[_vm._v(\"Fields available in source data\")])]),_c('tr',[_c('th',[_vm._v(\"Country\")]),_c('th',[_vm._v(\"Source\")]),_c('th',[_vm._v(\"Top tree\")]),_c('th',[_vm._v(\"Records\")]),_c('th',[_vm._v(\"Different\")]),_vm._l((_vm.fields),function(ref){\nvar fieldName = ref[0];\nvar fieldFunc = ref[1];\nreturn _c('th',[_vm._v(_vm._s(fieldName))])})],2),_vm._l((_vm.sources),function(source){return _c('tr',[_c('td',[_vm._v(_vm._s(source.country))]),_c('td',{staticClass:\"b\"},[_vm._v(_vm._s(source.short))]),_c('td',{staticClass:\"i f7\"},[_vm._v(_vm._s(_vm.topTree(source)))]),_c('td',{staticClass:\"f6\"},[_vm._v(_vm._s(source.keepCount.toLocaleString()))]),_c('td',[_vm._v(_vm._s(source.differentSpecies.toLocaleString()))]),_vm._l((_vm.fields),function(ref){\nvar fieldName = ref[0];\nvar fieldFunc = ref[1];\nreturn _c('td',{staticClass:\"f7\"},[(fieldFunc(source.crosswalk))?_c('i',{staticClass:\"fas fa-leaf dark-green\"}):_c('span')])})],2)})],2)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#Stats.ma4.pa2.bg-white(style=\"height:90%\").overflow-scroll.ba.b--gray.shadow-3\n        //- h2.mv0 Stats\n        //-.absolute(v-for=\"i in [1,2]\")\n        div    \n                table\n                    tr\n                        th(colspan=\"5\")\n                        td.dark-gray.b--gray.bt.bl.br(:colspan=\"fields.length\" style=\"text-align:center\") Fields available in source data\n\n                    tr\n                        th Country\n                        th Source\n                        th Top tree\n                        th Records\n                        th Different\n                        th(v-for=\"([fieldName, fieldFunc]) of fields\") {{ fieldName }}\n                    tr(v-for=\"source in sources\")\n                        td {{ source.country }}\n                        td.b {{ source.short }}\n                        td.i.f7 {{ topTree(source) }}\n                        td.f6 {{ source.keepCount.toLocaleString() }}\n                        td {{ source.differentSpecies.toLocaleString() }}\n                        td.f7(v-for=\"([fieldName, fieldFunc]) of fields\")\n                            i.fas.fa-leaf.dark-green(v-if=\"fieldFunc(source.crosswalk)\")\n                            span(v-else)\n                   \n                //- tr(v-for=\"country in countries\")\n                //-     th {{ country }}\n\n</template>\n\n<script>\nimport sources from '../sources';\nexport default {\n    name: \"Stats\",\n    data: () => ({\n        fields: [\n            ['Species', x => (x.species || x.scientific)],\n            ['Common', x => x.common],\n            ['DBH', x => x.dbh],\n            ['Planted date', x => x.planted],\n            ['Height', x => x.height],\n            ['Maturity', x => x.maturity],\n            ['Health', x => x.health],\n\n\n        ]\n        \n    }),\n    created() {\n        window.Stats = this;\n        console.log(sources);\n        console.log(this.countries);\n    },\n    computed: {\n        countries: () => [...(new Set(sources.map(s => s.country)))],\n        sources: () => sources.sort((a, b) => a.country > b.country)\n    },\n    methods: {\n        topTree(source) {\n            return source.speciesCounts && source.speciesCounts[0] && source.speciesCounts[0][0]\n            \n        }\n    },\n}\n</script>\n\n<style scoped>\nth,td {\n    font-size:12px;\n    text-align: left;\n    padding:4px;\n}\ntd i {\n    text-align:center;\n}\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Stats.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Stats.vue?vue&type=template&id=34c799f7&scoped=true&lang=pug&\"\nimport script from \"./Stats.vue?vue&type=script&lang=js&\"\nexport * from \"./Stats.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Stats.vue?vue&type=style&index=0&id=34c799f7&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"34c799f7\",\n  null\n  \n)\n\ncomponent.options.__file = \"Stats.vue\"\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"bg-white\",attrs:{\"id\":\"TreeSearch\"}},[_c('label',{staticClass:\"ma1\",attrs:{\"for\":\"filter\"}},[_vm._v(\"Tree filter\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.filter),expression:\"filter\"}],staticClass:\"ma1\",attrs:{\"id\":\"filter\"},domProps:{\"value\":(_vm.filter)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.filter=$event.target.value}}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n#TreeSearch.bg-white\n    label.ma1(for=\"filter\") Tree filter\n    input#filter.ma1(v-model=\"filter\")\n</template>\n\n<script>\nimport { EventBus } from '../EventBus';\nexport default {\n    name: \"TreeSearch\",\n    data: () => ({\n        filter: ''\n    }),\n    created() {\n        window.TreeSearch = this;\n    },\n    watch: {\n        filter(newValue, oldValue) {\n            EventBus.$emit('species-filter', newValue);\n        }\n    },\n}\n</script>\n\n<style scoped>\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSearch.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreeSearch.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TreeSearch.vue?vue&type=template&id=45637ae1&scoped=true&lang=pug&\"\nimport script from \"./TreeSearch.vue?vue&type=script&lang=js&\"\nexport * from \"./TreeSearch.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"45637ae1\",\n  null\n  \n)\n\ncomponent.options.__file = \"TreeSearch.vue\"\nexport default component.exports","<template lang=\"pug\">\n    #app.flex.flex-column.vh-100.avenir\n        #top.bb.b--gray.bg-green.haoeu3-ns\n            h1.f1-ns.f5.ma2-ns.lancelot.dib.fl \n                img.w2-ns.w1.dib.fl.ma2(src=\"cubetree-logo.png\")\n                span.dark-green OpenTrees.org\n                span.dark-gray.ml2.ml4-ns.f3-ns {{ stats.openTrees.toLocaleString()}} open data trees from {{ stats.sources }} sources in {{ stats.countries.length}} countries.\n        #middle.flex.flex-auto\n            #sidebar.br.b--gray.overflow-y-scroll.overflow-x-hidden.relative(v-show=\"panel\")\n                i.close-btn.pa2.mt1.dark-green.pointer.fw6.fas.fa-times.z-5(@click=\"close\" style=\"position:absolute;right:0;top:0; cursor:pointer;\")\n                .panel\n                    FeatureInfo(v-show=\"panel==='FeatureInfo'\")\n                    SourceInfo(v-show=\"panel==='SourceInfo'\")\n                    About(v-if=\"panel==='About'\")\n            #map-container.relative.flex-auto\n                Map\n                #overlay.absolute.ba.b--gray.shadow-3.ml2-ns.mt2-ns.mw5.mw-none-ns.overflow-y-scroll(v-if=\"!showStats\")\n                    //- TreeSearch\n                    Mode\n                    Legend\n                    \n                .absolute.w-100.h-100.pa2.center(v-if=\"showStats\")\n                    Stats\n                    \n        #bottom.bt.b--light-gray.flex-none.pa1.shadow-3\n            | Created by <a href=\"https://twitter.com/stevage1/\">Steve Bennett</a>. \n            a(href=\"#\" @click=\"about\") About OpenTrees.org\n            | .\n\n</template>\n\n<script>\nimport Map from './components/Map.vue'\nimport FeatureInfo from './components/FeatureInfo.vue'\nimport SourceInfo from './components/SourceInfo.vue'\nimport About from './components/About.vue';\nimport Mode from './components/Mode.vue';\nimport Legend from './components/Legend.vue';\nimport Stats from './components/Stats.vue';\nimport TreeSearch from './components/TreeSearch.vue';\nimport { EventBus } from './EventBus';\nimport stats from './stats.json';\nwindow.app = { }\nexport default {\n    name: 'app',\n    data() {\n        return {\n            stats,\n            showStats: location.hash.match(/stats/),\n            panel: 'About'\n        }\n    },\n    components: {\n      Map,\n      FeatureInfo,\n      SourceInfo,\n      Mode,\n      Legend,\n      Stats,\n      TreeSearch,\n      About\n    },\n    created() {\n        window.app.App = this;\n        EventBus.$on('source-select', source => this.panel = 'SourceInfo');\n        EventBus.$on('tree-select', tree => this.panel = 'FeatureInfo');\n        EventBus.$on('about', _ => this.panel = 'About');\n        EventBus.$on('panel-select', panel => this.panel = panel);\n    },\n    methods: {\n        about() {\n            EventBus.$emit('about');\n            \n        },\n        close() {\n            this.panel='';\n        }\n    },\n    watch: {\n        panel(newValue, oldValue) {\n            EventBus.$emit('resize');\n        }\n    },\n}\n\nrequire('tachyons/css/tachyons.min.css');\n</script>\n\n<style>\nhtml, body {\n  height: 100vh;\n  width: 100%;\n  margin:0;\n  padding:0;\n}\n#sidebar {\n    /* min-width:200px; */\n}\n@media screen and (max-width:768px) {\n    .not-mobile {\n        display: none;\n    }\n    #overlay {\n        max-height: 12rem;\n    }\n}\n@media screen and (min-width:768px) {\n    .only-mobile {\n        display: none;\n    }\n    #overlay {\n        max-height: calc(100vh - 8rem - 20px)\n    }\n}\n\n.bg-green {\n    background: hsl(98.6, 30.4%, 82%) !important;\n}\n\n.dark-green {\n    color: hsl(100, 29.4%, 30%) !important;\n}\n\n.light-green {\n    color: hsl(100, 29.4%, 50%) !important;\n}\n\n.bg-light-green {\n    background: hsl(100, 29.4%, 90%) !important;\n}\n\n.lancelot {\n    font-family:lancelot,sans-serif;\n}\n\na {\n    color: hsl(100, 30%, 30%);\n}\na:hover {\n    color: hsl(100,30%,60%);\n}\n.panel {\n     width:300px; \n     position:relative;\n}\n    \n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--11-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--11-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3992a475&lang=pug&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"App.vue\"\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=0&id=59bba388&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FeatureInfo.vue?vue&type=style&index=0&id=59bba388&scoped=true&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SourceInfo.vue?vue&type=style&index=0&id=b733c1de&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--5-oneOf-1-0!../../node_modules/css-loader/index.js??ref--5-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--5-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SourceInfo.vue?vue&type=style&index=0&id=b733c1de&scoped=true&lang=css&\""],"sourceRoot":""}